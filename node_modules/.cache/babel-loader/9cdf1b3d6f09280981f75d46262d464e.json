{"ast":null,"code":"import _classCallCheck from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vadym/Documents/work/job/wedge/src/views/Reports/Reports.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Dropdown, Glyphicon, MenuItem } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Loader from '../../components/Loader/Loader';\nimport Table from '../../components/Table/Table';\nimport { REPORT_TABLE_FIELDS } from '../../enums';\nimport { createErrorMessageSelector, createLoadingSelector } from '../../store/utils/selectors';\nimport ReportsTableItem from './components/ReportsTableItem/ReportTableItem';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport './reports.scss';\nimport { fetchNewest as _fetchNewest, fetchOlder as _fetchOlder, fetchReports as _fetchReports } from './scenario-actions';\nvar rateOptions = [{\n  value: 0,\n  text: 'Freeze'\n}, {\n  value: 5,\n  text: '30 seconds'\n}, {\n  value: 60,\n  text: 'Every minute'\n}];\n\nvar Reports =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Reports, _Component);\n\n  function Reports(props) {\n    var _this;\n\n    _classCallCheck(this, Reports);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Reports).call(this, props));\n\n    _this.startSyncingInterval = function () {\n      var rateTime = _this.state.rate.value;\n\n      if (_this.state.interval) {\n        clearInterval(_this.state.interval);\n      }\n\n      if (rateTime !== 0) {\n        var interval = setInterval(function () {\n          _this.props.fetchNewest();\n        }, rateTime * 1000);\n\n        _this.setState({\n          interval: interval\n        });\n      }\n    };\n\n    _this.handleChangeRefreshRate = function (rate) {\n      _this.setState({\n        rate: rate\n      }, function () {\n        _this.startSyncingInterval();\n      });\n    };\n\n    _this.changeFilter = function (val) {\n      _this.setState({\n        filter: val\n      });\n    };\n\n    _this.handleRefresh = function () {\n      _this.props.fetchReports();\n    };\n\n    _this.renderRefreshRateDropdown = function () {\n      return React.createElement(\"div\", {\n        className: 'reports__filters-refresh',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Refresh: \"), React.createElement(Dropdown, {\n        id: 'dropdown-refresh-rate',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        id: \"dropdown-basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, _this.state.rate.text), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, rateOptions.map(function (rate) {\n        return React.createElement(MenuItem, {\n          active: rate.value === _this.state.rate.value,\n          key: \"rate-index-item-\".concat(rate.value),\n          onSelect: function onSelect() {\n            return _this.handleChangeRefreshRate(rate);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, rate.text);\n      }))));\n    };\n\n    _this.renderFilterButtons = function () {\n      var filter = _this.state.filter;\n      return React.createElement(ButtonGroup, {\n        className: 'reports__filters-buttons',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this.changeFilter(0);\n        },\n        bsStyle: filter === 0 ? 'primary' : 'default',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"All\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this.changeFilter(1);\n        },\n        bsStyle: filter === 1 ? 'primary' : 'default',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Allowed\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this.changeFilter(2);\n        },\n        bsStyle: filter === 2 ? 'primary' : 'default',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Alert\"));\n    };\n\n    _this.renderReports = function (matches) {\n      var items = _this.props.items;\n      return items.map(function (item) {\n        return React.createElement(ReportsTableItem, {\n          key: \"reports-table-item-\".concat(item.id, \"-\").concat(item.date),\n          responsive: matches,\n          data: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.state = {\n      rate: {\n        value: 0,\n        text: 'Freeze'\n      },\n      filter: 0,\n      interval: null\n    };\n    return _this;\n  }\n\n  _createClass(Reports, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchReports();\n      this.startSyncingInterval();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.state.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"content reports\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'reports__search-bar',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: 'reports__filters',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'left-container',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Realtime View\")), React.createElement(\"div\", {\n        className: 'right-container',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.renderRefreshRateDropdown(), React.createElement(Glyphicon, {\n        className: 'small-icon refresh-button',\n        glyph: \"repeat\",\n        onClick: this.handleRefresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), this.renderFilterButtons())), React.createElement(Table.Container, {\n        root: 'reports',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Table.Content, {\n        root: 'reports',\n        headerComponent: React.createElement(Table.Header, {\n          items: REPORT_TABLE_FIELDS,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }),\n        renderItems: this.renderReports,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })), this.props.items.length !== 0 && !this.props.isLoading && React.createElement(\"p\", {\n        onClick: this.props.fetchOlder,\n        className: 'reports__more-button',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Load older reports\"), this.props.isLoading && React.createElement(\"div\", {\n        className: 'loader-container',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Reports;\n}(Component);\n\nReports.propTypes = {\n  fetchReports: PropTypes.func.isRequired,\n  fetchNewest: PropTypes.func.isRequired,\n  fetchOlder: PropTypes.func.isRequired,\n  items: PropTypes.array.isRequired,\n  isLoading: PropTypes.bool.isRequired\n};\nReports.defaultProps = {\n  items: []\n};\nvar loadingSelector = createLoadingSelector(['FETCHING_REPORTS']);\nvar errorSelector = createErrorMessageSelector(['FETCHING_REPORTS']);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    items: state.reports.items,\n    isLoading: loadingSelector(state),\n    error: errorSelector(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchReports: function fetchReports() {\n      return dispatch(_fetchReports());\n    },\n    fetchNewest: function fetchNewest() {\n      return dispatch(_fetchNewest());\n    },\n    fetchOlder: function fetchOlder() {\n      return dispatch(_fetchOlder());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reports);","map":{"version":3,"sources":["/Users/vadym/Documents/work/job/wedge/src/views/Reports/Reports.jsx"],"names":["PropTypes","React","Component","Button","ButtonGroup","Dropdown","Glyphicon","MenuItem","connect","Loader","Table","REPORT_TABLE_FIELDS","createErrorMessageSelector","createLoadingSelector","ReportsTableItem","SearchBar","fetchNewest","fetchOlder","fetchReports","rateOptions","value","text","Reports","props","startSyncingInterval","rateTime","state","rate","interval","clearInterval","setInterval","setState","handleChangeRefreshRate","changeFilter","val","filter","handleRefresh","renderRefreshRateDropdown","map","renderFilterButtons","renderReports","matches","items","item","id","date","length","isLoading","propTypes","func","isRequired","array","bool","defaultProps","loadingSelector","errorSelector","mapStateToProps","reports","error","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport {\n\tButton,\n\tButtonGroup,\n\tDropdown,\n\tGlyphicon,\n\tMenuItem\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport Loader from '../../components/Loader/Loader'\nimport Table from '../../components/Table/Table'\nimport { REPORT_TABLE_FIELDS } from '../../enums'\nimport {\n\tcreateErrorMessageSelector,\n\tcreateLoadingSelector\n} from '../../store/utils/selectors'\nimport ReportsTableItem from './components/ReportsTableItem/ReportTableItem'\nimport SearchBar from './components/SearchBar/SearchBar'\nimport './reports.scss'\nimport { fetchNewest, fetchOlder, fetchReports } from './scenario-actions'\n\nconst rateOptions = [\n\t{\n\t\tvalue: 0,\n\t\ttext: 'Freeze'\n\t},\n\t{\n\t\tvalue: 5,\n\t\ttext: '30 seconds'\n\t},\n\t{\n\t\tvalue: 60,\n\t\ttext: 'Every minute'\n\t}\n]\n\nclass Reports extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\trate: { value: 0, text: 'Freeze' },\n\t\t\tfilter: 0,\n\t\t\tinterval: null\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.fetchReports()\n\t\tthis.startSyncingInterval()\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.state.interval)\n\t}\n\n\tstartSyncingInterval = () => {\n\t\tconst rateTime = this.state.rate.value\n\t\tif (this.state.interval) {\n\t\t\tclearInterval(this.state.interval)\n\t\t}\n\t\tif (rateTime !== 0) {\n\t\t\tconst interval = setInterval(() => {\n\t\t\t\tthis.props.fetchNewest()\n\t\t\t}, rateTime * 1000)\n\t\t\tthis.setState({\n\t\t\t\tinterval\n\t\t\t})\n\t\t}\n\t}\n\n\thandleChangeRefreshRate = rate => {\n\t\tthis.setState({ rate }, () => {\n\t\t\tthis.startSyncingInterval()\n\t\t})\n\t}\n\n\tchangeFilter = val => {\n\t\tthis.setState({\n\t\t\tfilter: val\n\t\t})\n\t}\n\n\thandleRefresh = () => {\n\t\tthis.props.fetchReports()\n\t}\n\n\trenderRefreshRateDropdown = () => (\n\t\t<div className={'reports__filters-refresh'}>\n\t\t\t<p>Refresh: </p>\n\t\t\t<Dropdown id={'dropdown-refresh-rate'}>\n\t\t\t\t<Dropdown.Toggle id=\"dropdown-basic\">\n\t\t\t\t\t{this.state.rate.text}\n\t\t\t\t</Dropdown.Toggle>\n\n\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t{rateOptions.map(rate => (\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tactive={rate.value === this.state.rate.value}\n\t\t\t\t\t\t\tkey={`rate-index-item-${rate.value}`}\n\t\t\t\t\t\t\tonSelect={() => this.handleChangeRefreshRate(rate)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{rate.text}\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t))}\n\t\t\t\t</Dropdown.Menu>\n\t\t\t</Dropdown>\n\t\t</div>\n\t)\n\n\trenderFilterButtons = () => {\n\t\tconst { filter } = this.state\n\t\treturn (\n\t\t\t<ButtonGroup className={'reports__filters-buttons'}>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => this.changeFilter(0)}\n\t\t\t\t\tbsStyle={filter === 0 ? 'primary' : 'default'}\n\t\t\t\t>\n\t\t\t\t\tAll\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => this.changeFilter(1)}\n\t\t\t\t\tbsStyle={filter === 1 ? 'primary' : 'default'}\n\t\t\t\t>\n\t\t\t\t\tAllowed\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => this.changeFilter(2)}\n\t\t\t\t\tbsStyle={filter === 2 ? 'primary' : 'default'}\n\t\t\t\t>\n\t\t\t\t\tAlert\n\t\t\t\t</Button>\n\t\t\t</ButtonGroup>\n\t\t)\n\t}\n\n\trenderReports = matches => {\n\t\tconst { items } = this.props\n\t\treturn items.map(item => (\n\t\t\t<ReportsTableItem\n\t\t\t\tkey={`reports-table-item-${item.id}-${item.date}`}\n\t\t\t\tresponsive={matches}\n\t\t\t\tdata={item}\n\t\t\t/>\n\t\t))\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"content reports\">\n\t\t\t\t<div className={'reports__search-bar'}>\n\t\t\t\t\t<SearchBar />\n\t\t\t\t</div>\n\t\t\t\t<div className={'reports__filters'}>\n\t\t\t\t\t<div className={'left-container'}>\n\t\t\t\t\t\t<p>Realtime View</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'right-container'}>\n\t\t\t\t\t\t{this.renderRefreshRateDropdown()}\n\t\t\t\t\t\t<Glyphicon\n\t\t\t\t\t\t\tclassName={'small-icon refresh-button'}\n\t\t\t\t\t\t\tglyph=\"repeat\"\n\t\t\t\t\t\t\tonClick={this.handleRefresh}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{this.renderFilterButtons()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Table.Container root={'reports'}>\n\t\t\t\t\t<Table.Content\n\t\t\t\t\t\troot={'reports'}\n\t\t\t\t\t\theaderComponent={<Table.Header items={REPORT_TABLE_FIELDS} />}\n\t\t\t\t\t\trenderItems={this.renderReports}\n\t\t\t\t\t/>\n\t\t\t\t</Table.Container>\n\t\t\t\t{this.props.items.length !== 0 && !this.props.isLoading && (\n\t\t\t\t\t<p onClick={this.props.fetchOlder} className={'reports__more-button'}>\n\t\t\t\t\t\tLoad older reports\n\t\t\t\t\t</p>\n\t\t\t\t)}\n\t\t\t\t{this.props.isLoading && (\n\t\t\t\t\t<div className={'loader-container'}>\n\t\t\t\t\t\t<Loader />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nReports.propTypes = {\n\tfetchReports: PropTypes.func.isRequired,\n\tfetchNewest: PropTypes.func.isRequired,\n\tfetchOlder: PropTypes.func.isRequired,\n\titems: PropTypes.array.isRequired,\n\tisLoading: PropTypes.bool.isRequired\n}\n\nReports.defaultProps = {\n\titems: []\n}\n\nconst loadingSelector = createLoadingSelector(['FETCHING_REPORTS'])\nconst errorSelector = createErrorMessageSelector(['FETCHING_REPORTS'])\nconst mapStateToProps = state => {\n\treturn {\n\t\titems: state.reports.items,\n\t\tisLoading: loadingSelector(state),\n\t\terror: errorSelector(state)\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tfetchReports: () => dispatch(fetchReports()),\n\t\tfetchNewest: () => dispatch(fetchNewest()),\n\t\tfetchOlder: () => dispatch(fetchOlder())\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Reports)\n"]},"metadata":{},"sourceType":"module"}