{"ast":null,"code":"import _toConsumableArray from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vadym/Documents/work/job/wedge/src/views/Modals/NewGatewaySurvey.jsx\";\nimport 'leaflet/dist/leaflet.css';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Map, TileLayer } from 'react-leaflet';\nimport AddButton from '../../components/AddButton/AddButton';\nimport Card from '../../components/Card/Card';\nimport Form from '../../components/Form/Form';\nimport { ADDRESS_TYPE, AVAILABLE_REGIONS, EXPIRATION_TYPE, EXPIRATION_TYPE_OPTIONS, GATEWAY_TYPE_OPTIONS, IP_MODES_OPTIONS, IP_TYPE, IP_TYPE_OPTIONS, LOCATION_TYPE, LOCATION_TYPE_OPTIONS, MASKS, OBJECT_ASSET_VALUES, OBJECT_CATEGORIES, OBJECT_TYPES } from '../../enums';\nimport Translator from '../../utils/enumTranslator';\nimport { Footer } from './commons';\nimport './modals.scss';\n\nfunction parseAdditionalNetworks(networks) {\n  return networks.map(function (net) {\n    return {\n      network: \"\".concat(net.network.address, \" /\").concat(net.network.mask),\n      hop: net.nextHop.address\n    };\n  });\n}\n\nvar NewGatewaySurvey =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewGatewaySurvey, _React$Component);\n\n  function NewGatewaySurvey(props) {\n    var _this;\n\n    _classCallCheck(this, NewGatewaySurvey);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewGatewaySurvey).call(this, props));\n\n    _this.changeField = function (field, value) {\n      _this.setState(_defineProperty({}, field, value));\n    };\n\n    _this.onNameChange = function (val) {\n      return _this.changeField('name', val);\n    };\n\n    _this.onCategoryChange = function (val) {\n      return _this.changeField('category', val);\n    };\n\n    _this.onTypeChange = function (val) {\n      return _this.changeField('type', val);\n    };\n\n    _this.onExpiryChange = function (val) {\n      return _this.changeField('expiry', val);\n    };\n\n    _this.onDescriptionChange = function (val) {\n      return _this.changeField('description', val);\n    };\n\n    _this.onLocationChange = function (val) {\n      return _this.changeField('location', val);\n    };\n\n    _this.onLatChange = function (val) {\n      return _this.changeField('lat', val);\n    };\n\n    _this.onLongChange = function (val) {\n      return _this.changeField('long', val);\n    };\n\n    _this.onExpiryTypeChange = function (val) {\n      return _this.changeField('expiryType', val);\n    };\n\n    _this.onGatewayTypeChange = function (val) {\n      return _this.changeField('gatewayType', val);\n    };\n\n    _this.onProtocolTypeChange = function (val) {\n      return _this.changeField('protocolType', val);\n    };\n\n    _this.onAddressTypeChange = function (val) {\n      return _this.changeField('addressType', val);\n    };\n\n    _this.onStaticAddressChange = function (val) {\n      return _this.changeField('staticAddress', val);\n    };\n\n    _this.onStaticMaskChange = function (val) {\n      return _this.changeField('staticMask', val);\n    };\n\n    _this.onDefaultAddressChange = function (val) {\n      return _this.changeField('defaultAddress', val);\n    };\n\n    _this.onDefaultMaskChange = function (val) {\n      return _this.changeField('defaultMask', val);\n    };\n\n    _this.onLocalAddressChange = function (val) {\n      return _this.changeField('localAddress', val);\n    };\n\n    _this.onLocalMaskChange = function (val) {\n      return _this.changeField('localMask', val);\n    };\n\n    _this.onNewAdditionalNetworkChange = function (val) {\n      return _this.changeField('newAdditionalNetwork', val);\n    };\n\n    _this.onNewAdditionalHopChange = function (val) {\n      return _this.changeField('newAdditionalHop', val);\n    };\n\n    _this.onRegionChange = function (val) {\n      return _this.changeField('region', val);\n    };\n\n    _this.onFinish = function () {\n      if (_this.validate()) {\n        _this.props.onFinish(_this.state);\n      }\n    };\n\n    _this.onAdd = function () {\n      _this.setState({\n        additionalNetworks: [].concat(_toConsumableArray(_this.state.additionalNetworks), [{\n          network: _this.state.newAdditionalNetwork,\n          hop: _this.state.newAdditionalHop\n        }]),\n        newAdditionalNetwork: '',\n        newAdditionalHop: ''\n      });\n    };\n\n    _this.onRemove = function (index) {\n      _this.setState({\n        additionalNetworks: _this.state.additionalNetworks.filter(function (val, ind) {\n          return ind !== index;\n        })\n      });\n    };\n\n    if (props.edit) {\n      _this.state = {\n        name: props.item.name,\n        expiryType: props.item.expiry.type,\n        expiry: props.item.expiry.date,\n        profile: Translator.profileGroup(props.item.profileGroup),\n        category: Translator.category(props.item.category),\n        type: Translator.type(props.item.type),\n        asset: OBJECT_ASSET_VALUES[props.item.assetValue],\n        // NOT SAFE, TODO LATED\n        location: Translator.location(props.item.location.type),\n        lat: props.item.location.latitude,\n        long: props.item.location.longitude,\n        region: Translator.region(props.item.location.region),\n        description: props.item.description,\n        protocolType: Translator.protocolType(props.item.network.ip).value,\n        addressType: Translator.addressType(props.item.network.mode).value,\n        staticAddress: props.item.network.gatewayIp.address,\n        staticMask: Translator.mask(props.item.network.gatewayIp.mask),\n        defaultAddress: props.item.network.defaultRoute.address,\n        defaultMask: Translator.mask(props.item.network.defaultRoute.mask),\n        localAddress: props.item.network.gatewayLocal.address,\n        localMask: Translator.mask(props.item.network.gatewayLocal.mask),\n        additionalNetworks: parseAdditionalNetworks(props.item.network.additionalNetworks),\n        //props.item.network.additionalNetworks,\n        gatewayType: Translator.gatewayType(props.item.gatewayType).value\n      };\n    } else {\n      _this.state = {\n        additionalNetworks: [],\n        gatewayType: 0,\n        addressType: ADDRESS_TYPE.INTERNAL,\n        protocolType: IP_TYPE.IPv4,\n        expiryType: EXPIRATION_TYPE.HARD,\n        location: LOCATION_TYPE_OPTIONS[LOCATION_TYPE.AUTO]\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(NewGatewaySurvey, [{\n    key: \"validate\",\n    value: function validate() {\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'modal__content padded new-gateway-survey',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Card, {\n        header: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'form-row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        label: 'Name',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.name,\n        onChange: this.onNameChange,\n        placeholder: 'Name',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        center: true,\n        label: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Form.Toggle, {\n        selected: this.state.gatewayType,\n        selectedClass: 'toggle-selected',\n        onChange: this.onGatewayTypeChange,\n        options: GATEWAY_TYPE_OPTIONS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: 'form-row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        label: 'Category',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Form.Select, {\n        value: this.state.category,\n        onChange: this.onCategoryChange,\n        placeholder: 'Select category',\n        options: OBJECT_CATEGORIES,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        label: 'Type',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Form.Select, {\n        value: this.state.type,\n        onChange: this.onTypeChange,\n        placeholder: 'Select type',\n        options: OBJECT_TYPES,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: 'form-row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        label: 'Expiry',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.expiry,\n        onChange: this.onExpiryChange,\n        placeholder: 'Expiry',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        center: true,\n        label: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Form.Toggle, {\n        selected: this.state.expiryType,\n        selectedClass: 'toggle-selected',\n        onChange: this.onExpiryTypeChange,\n        options: EXPIRATION_TYPE_OPTIONS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })))), React.createElement(Card, {\n        header: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        center: true,\n        label: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Form.Toggle, {\n        selected: this.state.protocolType,\n        selectedClass: 'toggle-selected',\n        onChange: this.onProtocolTypeChange,\n        options: IP_TYPE_OPTIONS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: 'form-row space-above',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        label: 'Gateway Internet IP',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(Form.Group, {\n        center: true,\n        label: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Form.Toggle, {\n        selected: this.state.addressType,\n        selectedClass: 'toggle-selected',\n        onChange: this.onAddressTypeChange,\n        options: IP_MODES_OPTIONS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }))), React.createElement(Form.Group, {\n        full: true,\n        label: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'flex-row center space-above',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.staticAddress,\n        onChange: this.onStaticAddressChange,\n        style: {\n          flex: 2\n        },\n        placeholder: 'Static IP',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: 'ip-form-divider',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"/\"), React.createElement(Form.Select, {\n        value: this.state.staticMask,\n        onChange: this.onStaticMaskChange,\n        style: {\n          flex: 1\n        },\n        placeholder: 'Mask',\n        options: MASKS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }))), React.createElement(Form.Group, {\n        full: true,\n        label: 'Default route',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'flex-row center',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.defaultAddress,\n        onChange: this.onDefaultAddressChange,\n        style: {\n          flex: 2\n        },\n        placeholder: 'Default IP',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: 'ip-form-divider',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"/\"), React.createElement(Form.Select, {\n        value: this.state.defaultMask,\n        onChange: this.onDefaultMaskChange,\n        style: {\n          flex: 1\n        },\n        placeholder: 'Mask',\n        options: MASKS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }))), React.createElement(Form.Group, {\n        full: true,\n        label: 'Gateway local IP',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'flex-row center',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.localAddress,\n        onChange: this.onLocalAddressChange,\n        style: {\n          flex: 2\n        },\n        placeholder: 'Local IP',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: 'ip-form-divider',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"/\"), React.createElement(Form.Select, {\n        value: this.state.localMask,\n        onChange: this.onLocalMaskChange,\n        style: {\n          flex: 1\n        },\n        placeholder: 'Mask',\n        options: MASKS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }))), React.createElement(Form.Group, {\n        self: true,\n        label: 'Additional Local Networks',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'local-networks--container',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: 'network',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Network\"), React.createElement(\"th\", {\n        className: 'hop',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Next Hop\"), React.createElement(\"th\", {\n        className: 'last',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      })), this.state.additionalNetworks.map(function (net, index) {\n        return React.createElement(\"tr\", {\n          key: \"additional-network-index-\".concat(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          className: 'network',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, net.network), React.createElement(\"td\", {\n          className: 'hop',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, net.hop), React.createElement(\"td\", {\n          className: 'last',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: 'pe-7s-close red-delete-icon',\n          onClick: function onClick() {\n            return _this2.onRemove(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        })));\n      }), React.createElement(\"tr\", {\n        className: 'new-entry',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.newAdditionalNetwork,\n        onChange: this.onNewAdditionalNetworkChange,\n        extraClass: 'light',\n        placeholder: 'Network',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.newAdditionalHop,\n        onChange: this.onNewAdditionalHopChange,\n        extraClass: 'light',\n        placeholder: 'Next hop',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        className: 'last',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(AddButton, {\n        onClick: this.onAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      })))))))), React.createElement(Card, {\n        header: false,\n        className: 'component-coming-soon',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        full: true,\n        label: 'Description',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.description,\n        onChange: this.onDescriptionChange,\n        placeholder: 'Device description',\n        multiline: true,\n        rows: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        label: 'Location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(Form.Select, {\n        value: this.state.location,\n        onChange: this.onLocationChange,\n        placeholder: 'Select location value',\n        options: LOCATION_TYPE_OPTIONS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: 'form-row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, this.state.location.value === LOCATION_TYPE.REGION && React.createElement(Form.Group, {\n        label: 'Region',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(Form.Select, {\n        value: this.state.region,\n        onChange: this.onRegionChange,\n        placeholder: 'Select region',\n        options: AVAILABLE_REGIONS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      })), this.state.location.value === LOCATION_TYPE.COORDINATES && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        label: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.lat,\n        onChange: this.onLatChange,\n        placeholder: 'Latitude',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        label: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.long,\n        onChange: this.onLongChange,\n        placeholder: 'Longitude',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      })))), React.createElement(Map, {\n        style: {\n          height: '300px',\n          width: '100%'\n        },\n        center: [51.505, -0.09],\n        zoom: 13,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: 'wedge-modal__footer',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(Footer, {\n        onClick: this.onFinish,\n        edit: this.props.edit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return NewGatewaySurvey;\n}(React.Component);\n\nNewGatewaySurvey.propTypes = {\n  onFinish: PropTypes.func.isRequired,\n  edit: PropTypes.bool,\n  item: PropTypes.object\n};\nNewGatewaySurvey.Footer = Footer;\nexport default NewGatewaySurvey;","map":{"version":3,"sources":["/Users/vadym/Documents/work/job/wedge/src/views/Modals/NewGatewaySurvey.jsx"],"names":["PropTypes","React","Map","TileLayer","AddButton","Card","Form","ADDRESS_TYPE","AVAILABLE_REGIONS","EXPIRATION_TYPE","EXPIRATION_TYPE_OPTIONS","GATEWAY_TYPE_OPTIONS","IP_MODES_OPTIONS","IP_TYPE","IP_TYPE_OPTIONS","LOCATION_TYPE","LOCATION_TYPE_OPTIONS","MASKS","OBJECT_ASSET_VALUES","OBJECT_CATEGORIES","OBJECT_TYPES","Translator","Footer","parseAdditionalNetworks","networks","map","net","network","address","mask","hop","nextHop","NewGatewaySurvey","props","changeField","field","value","setState","onNameChange","val","onCategoryChange","onTypeChange","onExpiryChange","onDescriptionChange","onLocationChange","onLatChange","onLongChange","onExpiryTypeChange","onGatewayTypeChange","onProtocolTypeChange","onAddressTypeChange","onStaticAddressChange","onStaticMaskChange","onDefaultAddressChange","onDefaultMaskChange","onLocalAddressChange","onLocalMaskChange","onNewAdditionalNetworkChange","onNewAdditionalHopChange","onRegionChange","onFinish","validate","state","onAdd","additionalNetworks","newAdditionalNetwork","newAdditionalHop","onRemove","index","filter","ind","edit","name","item","expiryType","expiry","type","date","profile","profileGroup","category","asset","assetValue","location","lat","latitude","long","longitude","region","description","protocolType","ip","addressType","mode","staticAddress","gatewayIp","staticMask","defaultAddress","defaultRoute","defaultMask","localAddress","gatewayLocal","localMask","gatewayType","INTERNAL","IPv4","HARD","AUTO","flex","REGION","COORDINATES","height","width","Component","propTypes","func","isRequired","bool","object"],"mappings":"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","sourcesContent":["import 'leaflet/dist/leaflet.css'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { Map, TileLayer } from 'react-leaflet'\nimport AddButton from '../../components/AddButton/AddButton'\nimport Card from '../../components/Card/Card'\nimport Form from '../../components/Form/Form'\nimport {\n\tADDRESS_TYPE,\n\tAVAILABLE_REGIONS,\n\tEXPIRATION_TYPE,\n\tEXPIRATION_TYPE_OPTIONS,\n\tGATEWAY_TYPE_OPTIONS,\n\tIP_MODES_OPTIONS,\n\tIP_TYPE,\n\tIP_TYPE_OPTIONS,\n\tLOCATION_TYPE,\n\tLOCATION_TYPE_OPTIONS,\n\tMASKS,\n\tOBJECT_ASSET_VALUES,\n\tOBJECT_CATEGORIES,\n\tOBJECT_TYPES\n} from '../../enums'\nimport Translator from '../../utils/enumTranslator'\nimport { Footer } from './commons'\nimport './modals.scss'\n\nfunction parseAdditionalNetworks(networks) {\n\treturn networks.map(net => ({\n\t\tnetwork: `${net.network.address} /${net.network.mask}`,\n\t\thop: net.nextHop.address\n\t}))\n}\n\nclass NewGatewaySurvey extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tif (props.edit) {\n\t\t\tthis.state = {\n\t\t\t\tname: props.item.name,\n\t\t\t\texpiryType: props.item.expiry.type,\n\t\t\t\texpiry: props.item.expiry.date,\n\t\t\t\tprofile: Translator.profileGroup(props.item.profileGroup),\n\t\t\t\tcategory: Translator.category(props.item.category),\n\t\t\t\ttype: Translator.type(props.item.type),\n\t\t\t\tasset: OBJECT_ASSET_VALUES[props.item.assetValue], // NOT SAFE, TODO LATED\n\t\t\t\tlocation: Translator.location(props.item.location.type),\n\t\t\t\tlat: props.item.location.latitude,\n\t\t\t\tlong: props.item.location.longitude,\n\t\t\t\tregion: Translator.region(props.item.location.region),\n\t\t\t\tdescription: props.item.description,\n\t\t\t\tprotocolType: Translator.protocolType(props.item.network.ip).value,\n\t\t\t\taddressType: Translator.addressType(props.item.network.mode).value,\n\t\t\t\tstaticAddress: props.item.network.gatewayIp.address,\n\t\t\t\tstaticMask: Translator.mask(props.item.network.gatewayIp.mask),\n\t\t\t\tdefaultAddress: props.item.network.defaultRoute.address,\n\t\t\t\tdefaultMask: Translator.mask(props.item.network.defaultRoute.mask),\n\t\t\t\tlocalAddress: props.item.network.gatewayLocal.address,\n\t\t\t\tlocalMask: Translator.mask(props.item.network.gatewayLocal.mask),\n\t\t\t\tadditionalNetworks: parseAdditionalNetworks(\n\t\t\t\t\tprops.item.network.additionalNetworks\n\t\t\t\t), //props.item.network.additionalNetworks,\n\t\t\t\tgatewayType: Translator.gatewayType(props.item.gatewayType).value\n\t\t\t}\n\t\t} else {\n\t\t\tthis.state = {\n\t\t\t\tadditionalNetworks: [],\n\t\t\t\tgatewayType: 0,\n\t\t\t\taddressType: ADDRESS_TYPE.INTERNAL,\n\t\t\t\tprotocolType: IP_TYPE.IPv4,\n\t\t\t\texpiryType: EXPIRATION_TYPE.HARD,\n\t\t\t\tlocation: LOCATION_TYPE_OPTIONS[LOCATION_TYPE.AUTO]\n\t\t\t}\n\t\t}\n\t}\n\n\tchangeField = (field, value) => {\n\t\tthis.setState({\n\t\t\t[field]: value\n\t\t})\n\t}\n\n\tonNameChange = val => this.changeField('name', val)\n\tonCategoryChange = val => this.changeField('category', val)\n\tonTypeChange = val => this.changeField('type', val)\n\tonExpiryChange = val => this.changeField('expiry', val)\n\tonDescriptionChange = val => this.changeField('description', val)\n\tonLocationChange = val => this.changeField('location', val)\n\tonLatChange = val => this.changeField('lat', val)\n\tonLongChange = val => this.changeField('long', val)\n\tonExpiryTypeChange = val => this.changeField('expiryType', val)\n\tonGatewayTypeChange = val => this.changeField('gatewayType', val)\n\tonProtocolTypeChange = val => this.changeField('protocolType', val)\n\tonAddressTypeChange = val => this.changeField('addressType', val)\n\tonStaticAddressChange = val => this.changeField('staticAddress', val)\n\tonStaticMaskChange = val => this.changeField('staticMask', val)\n\tonDefaultAddressChange = val => this.changeField('defaultAddress', val)\n\tonDefaultMaskChange = val => this.changeField('defaultMask', val)\n\tonLocalAddressChange = val => this.changeField('localAddress', val)\n\tonLocalMaskChange = val => this.changeField('localMask', val)\n\tonNewAdditionalNetworkChange = val =>\n\t\tthis.changeField('newAdditionalNetwork', val)\n\tonNewAdditionalHopChange = val => this.changeField('newAdditionalHop', val)\n\tonRegionChange = val => this.changeField('region', val)\n\n\tonFinish = () => {\n\t\tif (this.validate()) {\n\t\t\tthis.props.onFinish(this.state)\n\t\t}\n\t}\n\n\tonAdd = () => {\n\t\tthis.setState({\n\t\t\tadditionalNetworks: [\n\t\t\t\t...this.state.additionalNetworks,\n\t\t\t\t{\n\t\t\t\t\tnetwork: this.state.newAdditionalNetwork,\n\t\t\t\t\thop: this.state.newAdditionalHop\n\t\t\t\t}\n\t\t\t],\n\t\t\tnewAdditionalNetwork: '',\n\t\t\tnewAdditionalHop: ''\n\t\t})\n\t}\n\n\tonRemove = index => {\n\t\tthis.setState({\n\t\t\tadditionalNetworks: this.state.additionalNetworks.filter(\n\t\t\t\t(val, ind) => ind !== index\n\t\t\t)\n\t\t})\n\t}\n\n\tvalidate() {\n\t\treturn true\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className={'modal__content padded new-gateway-survey'}>\n\t\t\t\t\t<Card header={false}>\n\t\t\t\t\t\t<div className={'form-row'}>\n\t\t\t\t\t\t\t<Form.Group label={'Name'}>\n\t\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\t\t\tonChange={this.onNameChange}\n\t\t\t\t\t\t\t\t\tplaceholder={'Name'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t<Form.Group center={true} label={''}>\n\t\t\t\t\t\t\t\t<Form.Toggle\n\t\t\t\t\t\t\t\t\tselected={this.state.gatewayType}\n\t\t\t\t\t\t\t\t\tselectedClass={'toggle-selected'}\n\t\t\t\t\t\t\t\t\tonChange={this.onGatewayTypeChange}\n\t\t\t\t\t\t\t\t\toptions={GATEWAY_TYPE_OPTIONS}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={'form-row'}>\n\t\t\t\t\t\t\t<Form.Group label={'Category'}>\n\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\tvalue={this.state.category}\n\t\t\t\t\t\t\t\t\tonChange={this.onCategoryChange}\n\t\t\t\t\t\t\t\t\tplaceholder={'Select category'}\n\t\t\t\t\t\t\t\t\toptions={OBJECT_CATEGORIES}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t<Form.Group label={'Type'}>\n\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\tvalue={this.state.type}\n\t\t\t\t\t\t\t\t\tonChange={this.onTypeChange}\n\t\t\t\t\t\t\t\t\tplaceholder={'Select type'}\n\t\t\t\t\t\t\t\t\toptions={OBJECT_TYPES}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={'form-row'}>\n\t\t\t\t\t\t\t<Form.Group label={'Expiry'}>\n\t\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\t\tvalue={this.state.expiry}\n\t\t\t\t\t\t\t\t\tonChange={this.onExpiryChange}\n\t\t\t\t\t\t\t\t\tplaceholder={'Expiry'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t<Form.Group center={true} label={''}>\n\t\t\t\t\t\t\t\t<Form.Toggle\n\t\t\t\t\t\t\t\t\tselected={this.state.expiryType}\n\t\t\t\t\t\t\t\t\tselectedClass={'toggle-selected'}\n\t\t\t\t\t\t\t\t\tonChange={this.onExpiryTypeChange}\n\t\t\t\t\t\t\t\t\toptions={EXPIRATION_TYPE_OPTIONS}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<Card header={false}>\n\t\t\t\t\t\t<Form.Group center={true} label={''}>\n\t\t\t\t\t\t\t<Form.Toggle\n\t\t\t\t\t\t\t\tselected={this.state.protocolType}\n\t\t\t\t\t\t\t\tselectedClass={'toggle-selected'}\n\t\t\t\t\t\t\t\tonChange={this.onProtocolTypeChange}\n\t\t\t\t\t\t\t\toptions={IP_TYPE_OPTIONS}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<div className={'form-row space-above'}>\n\t\t\t\t\t\t\t<Form.Group label={'Gateway Internet IP'} />\n\t\t\t\t\t\t\t<Form.Group center={true} label={''}>\n\t\t\t\t\t\t\t\t<Form.Toggle\n\t\t\t\t\t\t\t\t\tselected={this.state.addressType}\n\t\t\t\t\t\t\t\t\tselectedClass={'toggle-selected'}\n\t\t\t\t\t\t\t\t\tonChange={this.onAddressTypeChange}\n\t\t\t\t\t\t\t\t\toptions={IP_MODES_OPTIONS}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Form.Group full label={''}>\n\t\t\t\t\t\t\t<div className={'flex-row center space-above'}>\n\t\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\t\tvalue={this.state.staticAddress}\n\t\t\t\t\t\t\t\t\tonChange={this.onStaticAddressChange}\n\t\t\t\t\t\t\t\t\tstyle={{ flex: 2 }}\n\t\t\t\t\t\t\t\t\tplaceholder={'Static IP'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<p className={'ip-form-divider'}>/</p>\n\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\tvalue={this.state.staticMask}\n\t\t\t\t\t\t\t\t\tonChange={this.onStaticMaskChange}\n\t\t\t\t\t\t\t\t\tstyle={{ flex: 1 }}\n\t\t\t\t\t\t\t\t\tplaceholder={'Mask'}\n\t\t\t\t\t\t\t\t\toptions={MASKS}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group full label={'Default route'}>\n\t\t\t\t\t\t\t<div className={'flex-row center'}>\n\t\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\t\tvalue={this.state.defaultAddress}\n\t\t\t\t\t\t\t\t\tonChange={this.onDefaultAddressChange}\n\t\t\t\t\t\t\t\t\tstyle={{ flex: 2 }}\n\t\t\t\t\t\t\t\t\tplaceholder={'Default IP'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<p className={'ip-form-divider'}>/</p>\n\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\tvalue={this.state.defaultMask}\n\t\t\t\t\t\t\t\t\tonChange={this.onDefaultMaskChange}\n\t\t\t\t\t\t\t\t\tstyle={{ flex: 1 }}\n\t\t\t\t\t\t\t\t\tplaceholder={'Mask'}\n\t\t\t\t\t\t\t\t\toptions={MASKS}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group full label={'Gateway local IP'}>\n\t\t\t\t\t\t\t<div className={'flex-row center'}>\n\t\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\t\tvalue={this.state.localAddress}\n\t\t\t\t\t\t\t\t\tonChange={this.onLocalAddressChange}\n\t\t\t\t\t\t\t\t\tstyle={{ flex: 2 }}\n\t\t\t\t\t\t\t\t\tplaceholder={'Local IP'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<p className={'ip-form-divider'}>/</p>\n\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\tvalue={this.state.localMask}\n\t\t\t\t\t\t\t\t\tonChange={this.onLocalMaskChange}\n\t\t\t\t\t\t\t\t\tstyle={{ flex: 1 }}\n\t\t\t\t\t\t\t\t\tplaceholder={'Mask'}\n\t\t\t\t\t\t\t\t\toptions={MASKS}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group self label={'Additional Local Networks'}>\n\t\t\t\t\t\t\t<div className={'local-networks--container'}>\n\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th className={'network'}>Network</th>\n\t\t\t\t\t\t\t\t\t\t\t<th className={'hop'}>Next Hop</th>\n\t\t\t\t\t\t\t\t\t\t\t<th className={'last'} />\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t{this.state.additionalNetworks.map((net, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={`additional-network-index-${index}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className={'network'}>{net.network}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className={'hop'}>{net.hop}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className={'last'}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={'pe-7s-close red-delete-icon'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.onRemove(index)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t<tr className={'new-entry'}>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.newAdditionalNetwork}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.onNewAdditionalNetworkChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\textraClass={'light'}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={'Network'}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.newAdditionalHop}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.onNewAdditionalHopChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\textraClass={'light'}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={'Next hop'}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t<td className={'last'}>\n\t\t\t\t\t\t\t\t\t\t\t\t<AddButton onClick={this.onAdd} />\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<Card header={false} className={'component-coming-soon'}>\n\t\t\t\t\t\t<Form.Group full={true} label={'Description'}>\n\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\t\t\t\tonChange={this.onDescriptionChange}\n\t\t\t\t\t\t\t\tplaceholder={'Device description'}\n\t\t\t\t\t\t\t\tmultiline={true}\n\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group label={'Location'}>\n\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\tvalue={this.state.location}\n\t\t\t\t\t\t\t\tonChange={this.onLocationChange}\n\t\t\t\t\t\t\t\tplaceholder={'Select location value'}\n\t\t\t\t\t\t\t\toptions={LOCATION_TYPE_OPTIONS}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<div className={'form-row'}>\n\t\t\t\t\t\t\t{this.state.location.value === LOCATION_TYPE.REGION && (\n\t\t\t\t\t\t\t\t<Form.Group label={'Region'}>\n\t\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.region}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onRegionChange}\n\t\t\t\t\t\t\t\t\t\tplaceholder={'Select region'}\n\t\t\t\t\t\t\t\t\t\toptions={AVAILABLE_REGIONS}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this.state.location.value === LOCATION_TYPE.COORDINATES && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Form.Group label={''}>\n\t\t\t\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.lat}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onLatChange}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={'Latitude'}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Group label={''}>\n\t\t\t\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.long}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onLongChange}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={'Longitude'}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<Map\n\t\t\t\t\t\t\tstyle={{ height: '300px', width: '100%' }}\n\t\t\t\t\t\t\tcenter={[51.505, -0.09]}\n\t\t\t\t\t\t\tzoom={13}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Map>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t\t<div className={'wedge-modal__footer'}>\n\t\t\t\t\t<Footer onClick={this.onFinish} edit={this.props.edit} />\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nNewGatewaySurvey.propTypes = {\n\tonFinish: PropTypes.func.isRequired,\n\tedit: PropTypes.bool,\n\titem: PropTypes.object\n}\n\nNewGatewaySurvey.Footer = Footer\nexport default NewGatewaySurvey\n"]},"metadata":{},"sourceType":"module"}