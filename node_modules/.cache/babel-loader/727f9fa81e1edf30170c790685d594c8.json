{"ast":null,"code":"import _regeneratorRuntime from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport set from 'lodash/set';\nimport { createResponseErrorMessage, extractResponseErrorStatus } from '../../utils/responseErrorHandler';\nimport { createUser, readUserData, fulfillUser } from '../../store/sagas/apiCalls';\nimport { LOCAL_ACCESS_TOKEN_KEY } from '../../enums';\nimport { startLoading, finishLoading, setError, setEmail, setUser, confirmEmail } from '../../store/user/actions';\nimport history from '../../history';\nexport var registerEmail = function registerEmail(email) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var status, specificErrorHandler, errorMessage;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch(startLoading());\n                _context.prev = 1;\n                _context.next = 4;\n                return createUser(email);\n\n              case 4:\n                dispatch(setEmail(email));\n                history.replace('/auth/sign-up/email-entered');\n                _context.next = 14;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                status = extractResponseErrorStatus(_context.t0);\n                specificErrorHandler = {\n                  409: 'This email is already taken!',\n                  400: 'Wrong payload, missing email!',\n                  default: 'Error while registering email!'\n                };\n                errorMessage = createResponseErrorMessage({\n                  status: status,\n                  specificErrorHandler: specificErrorHandler\n                });\n                dispatch(setError(errorMessage));\n\n              case 14:\n                _context.prev = 14;\n                dispatch(finishLoading());\n                return _context.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 8, 14, 17]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var completeUser = function completeUser(creds) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n        var _getState, _getState$user, email, uuid, user, status, specificErrorHandler, errorMessage;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch(startLoading());\n                _getState = getState(), _getState$user = _getState.user, email = _getState$user.email, uuid = _getState$user.uuid;\n                set(creds, 'email', email);\n                set(creds, 'uuid', uuid);\n                _context2.prev = 4;\n                _context2.next = 7;\n                return fulfillUser(creds);\n\n              case 7:\n                user = _context2.sent;\n                dispatch(setUser(user));\n                history.replace('/auth/sign-up/billing');\n                _context2.next = 18;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](4);\n                status = extractResponseErrorStatus(_context2.t0);\n                specificErrorHandler = {\n                  400: 'Wrong payload, missing username or password',\n                  401: 'Invalid username or password!',\n                  404: 'No username, wrong username, wrong password!',\n                  default: 'Error while registering user!'\n                };\n                errorMessage = createResponseErrorMessage({\n                  specificErrorHandler: specificErrorHandler,\n                  status: status\n                });\n                dispatch(setError(errorMessage));\n\n              case 18:\n                _context2.prev = 18;\n                dispatch(finishLoading());\n                return _context2.finish(18);\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[4, 12, 18, 21]]);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var checkIfTheTokenIsValid = function checkIfTheTokenIsValid(_ref3) {\n  var token = _ref3.token,\n      username = _ref3.username;\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var _ref5, data, status, specificErrorHandler, errorMessage;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                dispatch(startLoading());\n                _context3.prev = 1;\n                localStorage.setItem(LOCAL_ACCESS_TOKEN_KEY, token);\n                _context3.next = 5;\n                return readUserData(username);\n\n              case 5:\n                _ref5 = _context3.sent;\n                data = _ref5.data;\n                dispatch(setUser(data));\n                dispatch(confirmEmail());\n                history.replace('/auth/sign-up/personal-info');\n                _context3.next = 18;\n                break;\n\n              case 12:\n                _context3.prev = 12;\n                _context3.t0 = _context3[\"catch\"](1);\n                status = extractResponseErrorStatus(_context3.t0);\n                specificErrorHandler = {\n                  403: 'Incorrect link!',\n                  401: 'Your token has expired. We`ve sent you a new email',\n                  400: 'Wrong payload, missing username',\n                  404: 'Usernot found',\n                  default: 'Error while confirming email!'\n                };\n                errorMessage = createResponseErrorMessage({\n                  specificErrorHandler: specificErrorHandler,\n                  status: status\n                });\n                dispatch(setError(errorMessage));\n\n              case 18:\n                _context3.prev = 18;\n                dispatch(finishLoading());\n                return _context3.finish(18);\n\n              case 21:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 12, 18, 21]]);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/vadym/Documents/work/job/wedge/src/views/SignUpForm/scenario-actions.js"],"names":["set","createResponseErrorMessage","extractResponseErrorStatus","createUser","readUserData","fulfillUser","LOCAL_ACCESS_TOKEN_KEY","startLoading","finishLoading","setError","setEmail","setUser","confirmEmail","history","registerEmail","email","dispatch","replace","status","specificErrorHandler","default","errorMessage","completeUser","creds","getState","user","uuid","checkIfTheTokenIsValid","token","username","localStorage","setItem","data"],"mappings":"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","sourcesContent":["import set from 'lodash/set'\n\nimport {\n\tcreateResponseErrorMessage,\n\textractResponseErrorStatus\n} from '../../utils/responseErrorHandler'\nimport {\n\tcreateUser,\n\treadUserData,\n\tfulfillUser\n} from '../../store/sagas/apiCalls'\nimport { LOCAL_ACCESS_TOKEN_KEY } from '../../enums'\nimport {\n\tstartLoading,\n\tfinishLoading,\n\tsetError,\n\tsetEmail,\n\tsetUser,\n\tconfirmEmail\n} from '../../store/user/actions'\nimport history from '../../history'\n\nexport const registerEmail = email => async dispatch => {\n\tdispatch(startLoading())\n\ttry {\n\t\tawait createUser(email)\n\t\tdispatch(setEmail(email))\n\t\thistory.replace('/auth/sign-up/email-entered')\n\t} catch (error) {\n\t\tconst status = extractResponseErrorStatus(error)\n\t\tconst specificErrorHandler = {\n\t\t\t409: 'This email is already taken!',\n\t\t\t400: 'Wrong payload, missing email!',\n\t\t\tdefault: 'Error while registering email!'\n\t\t}\n\t\tconst errorMessage = createResponseErrorMessage({\n\t\t\tstatus,\n\t\t\tspecificErrorHandler\n\t\t})\n\t\tdispatch(setError(errorMessage))\n\t} finally {\n\t\tdispatch(finishLoading())\n\t}\n}\n\nexport const completeUser = creds => async (dispatch, getState) => {\n\tdispatch(startLoading())\n\tconst {\n\t\tuser: { email, uuid }\n\t} = getState()\n\tset(creds, 'email', email)\n\tset(creds, 'uuid', uuid)\n\ttry {\n\t\tconst user = await fulfillUser(creds)\n\t\tdispatch(setUser(user))\n\t\thistory.replace('/auth/sign-up/billing')\n\t} catch (error) {\n\t\tconst status = extractResponseErrorStatus(error)\n\t\tconst specificErrorHandler = {\n\t\t\t400: 'Wrong payload, missing username or password',\n\t\t\t401: 'Invalid username or password!',\n\t\t\t404: 'No username, wrong username, wrong password!',\n\t\t\tdefault: 'Error while registering user!'\n\t\t}\n\t\tconst errorMessage = createResponseErrorMessage({\n\t\t\tspecificErrorHandler,\n\t\t\tstatus\n\t\t})\n\t\tdispatch(setError(errorMessage))\n\t} finally {\n\t\tdispatch(finishLoading())\n\t}\n}\n\nexport const checkIfTheTokenIsValid = ({\n\ttoken,\n\tusername\n}) => async dispatch => {\n\tdispatch(startLoading())\n\ttry {\n\t\tlocalStorage.setItem(LOCAL_ACCESS_TOKEN_KEY, token)\n\t\tconst { data } = await readUserData(username)\n\t\tdispatch(setUser(data))\n\t\tdispatch(confirmEmail())\n\t\thistory.replace('/auth/sign-up/personal-info')\n\t} catch (error) {\n\t\tconst status = extractResponseErrorStatus(error)\n\t\tconst specificErrorHandler = {\n\t\t\t403: 'Incorrect link!',\n\t\t\t401: 'Your token has expired. We`ve sent you a new email',\n\t\t\t400: 'Wrong payload, missing username',\n\t\t\t404: 'Usernot found',\n\t\t\tdefault: 'Error while confirming email!'\n\t\t}\n\t\tconst errorMessage = createResponseErrorMessage({\n\t\t\tspecificErrorHandler,\n\t\t\tstatus\n\t\t})\n\t\tdispatch(setError(errorMessage))\n\t} finally {\n\t\tdispatch(finishLoading())\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}