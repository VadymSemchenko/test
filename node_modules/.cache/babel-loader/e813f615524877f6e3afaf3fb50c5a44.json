{"ast":null,"code":"import _defineProperty from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vadym/Documents/work/job/wedge/src/views/Modals/NewAddressSurvey.jsx\";\nimport 'leaflet/dist/leaflet.css';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Map, TileLayer } from 'react-leaflet';\nimport { INFO } from '../../assets/Icons';\nimport Card from '../../components/Card/Card';\nimport Form from '../../components/Form/Form';\nimport { ADDRESS_TYPE, ADDRESS_TYPES_OPTIONS, AVAILABLE_REGIONS, EXPIRATION_TYPE, EXPIRATION_TYPE_OPTIONS, IP_TYPE, IP_TYPE_OPTIONS, LOCATION_TYPE, LOCATION_TYPE_OPTIONS, MASKS, OBJECT_ASSET_VALUES, OBJECT_CATEGORIES, OBJECT_TYPES } from '../../enums';\nimport Translator from '../../utils/enumTranslator';\nimport { Footer } from './commons';\nimport './modals.scss';\n\nvar NewAddressSurvey =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewAddressSurvey, _React$Component);\n\n  function NewAddressSurvey(props) {\n    var _this;\n\n    _classCallCheck(this, NewAddressSurvey);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewAddressSurvey).call(this, props));\n\n    _this.changeField = function (field, value) {\n      _this.setState(_defineProperty({}, field, value));\n    };\n\n    _this.onNameChange = function (val) {\n      return _this.changeField('name', val);\n    };\n\n    _this.onCategoryChange = function (val) {\n      return _this.changeField('category', val);\n    };\n\n    _this.onTypeChange = function (val) {\n      return _this.changeField('type', val);\n    };\n\n    _this.onExpiryChange = function (val) {\n      return _this.changeField('expiry', val);\n    };\n\n    _this.onDescriptionChange = function (val) {\n      return _this.changeField('description', val);\n    };\n\n    _this.onLocationChange = function (val) {\n      return _this.changeField('location', val);\n    };\n\n    _this.onLatChange = function (val) {\n      return _this.changeField('lat', val);\n    };\n\n    _this.onLongChange = function (val) {\n      return _this.changeField('long', val);\n    };\n\n    _this.onExpiryTypeChange = function (val) {\n      return _this.changeField('expiryType', val);\n    };\n\n    _this.onProtocolTypeChange = function (val) {\n      return _this.changeField('protocolType', val);\n    };\n\n    _this.onAddressTypeChange = function (val) {\n      return _this.changeField('addressType', val);\n    };\n\n    _this.onAddressChange = function (val) {\n      return _this.changeField('address', val);\n    };\n\n    _this.onMaskChange = function (val) {\n      return _this.changeField('mask', val);\n    };\n\n    _this.onRegionChange = function (val) {\n      return _this.changeField('region', val);\n    };\n\n    _this.onFinish = function () {\n      if (_this.validate()) {\n        _this.props.onFinish(_this.state);\n      }\n    };\n\n    if (props.edit) {\n      _this.state = {\n        name: props.item.name,\n        expiryType: props.item.expiry.type,\n        expiry: props.item.expiry.date,\n        category: Translator.category(props.item.category),\n        type: Translator.type(props.item.type),\n        asset: OBJECT_ASSET_VALUES[props.item.assetValue],\n        // NOT SAFE, TODO LATED\n        location: Translator.location(props.item.location.type),\n        lat: props.item.location.latitude,\n        long: props.item.location.longitude,\n        region: Translator.region(props.item.location.region),\n        description: props.item.description,\n        protocolType: Translator.protocolType(props.item.network.ip).value,\n        addressType: Translator.addressType(props.item.addressType).value,\n        address: props.item.network.address.address,\n        mask: Translator.mask(props.item.network.address.mask)\n      };\n    } else {\n      _this.state = {\n        addressType: ADDRESS_TYPE.INTERNAL,\n        protocolType: IP_TYPE.IPv4,\n        expiryType: EXPIRATION_TYPE.HARD,\n        location: LOCATION_TYPE_OPTIONS[LOCATION_TYPE.AUTO]\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(NewAddressSurvey, [{\n    key: \"validate\",\n    value: function validate() {\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'modal__content padded new-address-survey',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Card, {\n        header: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.props.edit && React.createElement(\"div\", {\n        className: 'object-id__button',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.props.item.id, React.createElement(\"img\", {\n        src: INFO,\n        alt: 'info-icon',\n        className: 'small-icon',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: 'form-row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        label: 'Name',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.name,\n        onChange: this.onNameChange,\n        placeholder: 'Name',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        center: true,\n        label: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Form.Toggle, {\n        selected: this.state.addressType,\n        selectedClass: 'toggle-selected',\n        onChange: this.onAddressTypeChange,\n        options: ADDRESS_TYPES_OPTIONS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))), React.createElement(Form.Group, {\n        center: true,\n        label: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Form.Toggle, {\n        selected: this.state.protocolType,\n        selectedClass: 'toggle-selected',\n        onChange: this.onProtocolTypeChange,\n        options: IP_TYPE_OPTIONS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        full: true,\n        label: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'flex-row center',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.address,\n        onChange: this.onAddressChange,\n        style: {\n          flex: 2\n        },\n        placeholder: 'Address',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: 'ip-form-divider',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"/\"), React.createElement(Form.Select, {\n        value: this.state.mask,\n        onChange: this.onMaskChange,\n        style: {\n          flex: 1\n        },\n        placeholder: 'Mask',\n        options: MASKS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: 'form-row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        label: 'Category',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Form.Select, {\n        value: this.state.category,\n        onChange: this.onCategoryChange,\n        placeholder: 'Select category',\n        options: OBJECT_CATEGORIES,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        label: 'Type',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Form.Select, {\n        value: this.state.type,\n        onChange: this.onTypeChange,\n        placeholder: 'Select type',\n        options: OBJECT_TYPES,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: 'form-row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        label: 'Expiry',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.expiry,\n        onChange: this.onExpiryChange,\n        placeholder: 'Expiry',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        center: true,\n        label: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Form.Toggle, {\n        selected: this.state.expiryType,\n        selectedClass: 'toggle-selected',\n        onChange: this.onExpiryTypeChange,\n        options: EXPIRATION_TYPE_OPTIONS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })))), React.createElement(Card, {\n        header: false,\n        className: 'component-coming-soon',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        full: true,\n        label: 'Description',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.description,\n        onChange: this.onDescriptionChange,\n        placeholder: 'Device description',\n        multiline: true,\n        rows: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        label: 'Location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Form.Select, {\n        value: this.state.location,\n        onChange: this.onLocationChange,\n        placeholder: 'Select location value',\n        options: LOCATION_TYPE_OPTIONS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: 'form-row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, this.state.location.value === LOCATION_TYPE.REGION && React.createElement(Form.Group, {\n        label: 'Region',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Form.Select, {\n        value: this.state.region,\n        onChange: this.onRegionChange,\n        placeholder: 'Select region',\n        options: AVAILABLE_REGIONS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })), this.state.location.value === LOCATION_TYPE.COORDINATES && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        label: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.lat,\n        onChange: this.onLatChange,\n        placeholder: 'Latitude',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        label: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.long,\n        onChange: this.onLongChange,\n        placeholder: 'Longitude',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      })))), React.createElement(Map, {\n        style: {\n          height: '300px',\n          width: '100%'\n        },\n        center: [51.505, -0.09],\n        zoom: 13,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: 'wedge-modal__footer',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(Footer, {\n        onClick: this.onFinish,\n        edit: this.props.edit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return NewAddressSurvey;\n}(React.Component);\n\nNewAddressSurvey.propTypes = {\n  onFinish: PropTypes.func.isRequired,\n  edit: PropTypes.bool,\n  item: PropTypes.object\n};\nNewAddressSurvey.Footer = Footer;\nexport default NewAddressSurvey;","map":{"version":3,"sources":["/Users/vadym/Documents/work/job/wedge/src/views/Modals/NewAddressSurvey.jsx"],"names":["PropTypes","React","Map","TileLayer","INFO","Card","Form","ADDRESS_TYPE","ADDRESS_TYPES_OPTIONS","AVAILABLE_REGIONS","EXPIRATION_TYPE","EXPIRATION_TYPE_OPTIONS","IP_TYPE","IP_TYPE_OPTIONS","LOCATION_TYPE","LOCATION_TYPE_OPTIONS","MASKS","OBJECT_ASSET_VALUES","OBJECT_CATEGORIES","OBJECT_TYPES","Translator","Footer","NewAddressSurvey","props","changeField","field","value","setState","onNameChange","val","onCategoryChange","onTypeChange","onExpiryChange","onDescriptionChange","onLocationChange","onLatChange","onLongChange","onExpiryTypeChange","onProtocolTypeChange","onAddressTypeChange","onAddressChange","onMaskChange","onRegionChange","onFinish","validate","state","edit","name","item","expiryType","expiry","type","date","category","asset","assetValue","location","lat","latitude","long","longitude","region","description","protocolType","network","ip","addressType","address","mask","INTERNAL","IPv4","HARD","AUTO","id","flex","REGION","COORDINATES","height","width","Component","propTypes","func","isRequired","bool","object"],"mappings":"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","sourcesContent":["import 'leaflet/dist/leaflet.css'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { Map, TileLayer } from 'react-leaflet'\nimport { INFO } from '../../assets/Icons'\nimport Card from '../../components/Card/Card'\nimport Form from '../../components/Form/Form'\nimport {\n\tADDRESS_TYPE,\n\tADDRESS_TYPES_OPTIONS,\n\tAVAILABLE_REGIONS,\n\tEXPIRATION_TYPE,\n\tEXPIRATION_TYPE_OPTIONS,\n\tIP_TYPE,\n\tIP_TYPE_OPTIONS,\n\tLOCATION_TYPE,\n\tLOCATION_TYPE_OPTIONS,\n\tMASKS,\n\tOBJECT_ASSET_VALUES,\n\tOBJECT_CATEGORIES,\n\tOBJECT_TYPES\n} from '../../enums'\nimport Translator from '../../utils/enumTranslator'\nimport { Footer } from './commons'\nimport './modals.scss'\n\nclass NewAddressSurvey extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tif (props.edit) {\n\t\t\tthis.state = {\n\t\t\t\tname: props.item.name,\n\t\t\t\texpiryType: props.item.expiry.type,\n\t\t\t\texpiry: props.item.expiry.date,\n\t\t\t\tcategory: Translator.category(props.item.category),\n\t\t\t\ttype: Translator.type(props.item.type),\n\t\t\t\tasset: OBJECT_ASSET_VALUES[props.item.assetValue], // NOT SAFE, TODO LATED\n\t\t\t\tlocation: Translator.location(props.item.location.type),\n\t\t\t\tlat: props.item.location.latitude,\n\t\t\t\tlong: props.item.location.longitude,\n\t\t\t\tregion: Translator.region(props.item.location.region),\n\t\t\t\tdescription: props.item.description,\n\t\t\t\tprotocolType: Translator.protocolType(props.item.network.ip).value,\n\t\t\t\taddressType: Translator.addressType(props.item.addressType).value,\n\t\t\t\taddress: props.item.network.address.address,\n\t\t\t\tmask: Translator.mask(props.item.network.address.mask)\n\t\t\t}\n\t\t} else {\n\t\t\tthis.state = {\n\t\t\t\taddressType: ADDRESS_TYPE.INTERNAL,\n\t\t\t\tprotocolType: IP_TYPE.IPv4,\n\t\t\t\texpiryType: EXPIRATION_TYPE.HARD,\n\t\t\t\tlocation: LOCATION_TYPE_OPTIONS[LOCATION_TYPE.AUTO]\n\t\t\t}\n\t\t}\n\t}\n\n\tchangeField = (field, value) => {\n\t\tthis.setState({\n\t\t\t[field]: value\n\t\t})\n\t}\n\n\tonNameChange = val => this.changeField('name', val)\n\tonCategoryChange = val => this.changeField('category', val)\n\tonTypeChange = val => this.changeField('type', val)\n\tonExpiryChange = val => this.changeField('expiry', val)\n\tonDescriptionChange = val => this.changeField('description', val)\n\tonLocationChange = val => this.changeField('location', val)\n\tonLatChange = val => this.changeField('lat', val)\n\tonLongChange = val => this.changeField('long', val)\n\tonExpiryTypeChange = val => this.changeField('expiryType', val)\n\tonProtocolTypeChange = val => this.changeField('protocolType', val)\n\tonAddressTypeChange = val => this.changeField('addressType', val)\n\tonAddressChange = val => this.changeField('address', val)\n\tonMaskChange = val => this.changeField('mask', val)\n\tonRegionChange = val => this.changeField('region', val)\n\n\tonFinish = () => {\n\t\tif (this.validate()) {\n\t\t\tthis.props.onFinish(this.state)\n\t\t}\n\t}\n\n\tvalidate() {\n\t\treturn true\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className={'modal__content padded new-address-survey'}>\n\t\t\t\t\t<Card header={false}>\n\t\t\t\t\t\t{this.props.edit && (\n\t\t\t\t\t\t\t<div className={'object-id__button'}>\n\t\t\t\t\t\t\t\t{this.props.item.id}\n\t\t\t\t\t\t\t\t<img src={INFO} alt={'info-icon'} className={'small-icon'} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div className={'form-row'}>\n\t\t\t\t\t\t\t<Form.Group label={'Name'}>\n\t\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\t\t\tonChange={this.onNameChange}\n\t\t\t\t\t\t\t\t\tplaceholder={'Name'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t<Form.Group center={true} label={''}>\n\t\t\t\t\t\t\t\t<Form.Toggle\n\t\t\t\t\t\t\t\t\tselected={this.state.addressType}\n\t\t\t\t\t\t\t\t\tselectedClass={'toggle-selected'}\n\t\t\t\t\t\t\t\t\tonChange={this.onAddressTypeChange}\n\t\t\t\t\t\t\t\t\toptions={ADDRESS_TYPES_OPTIONS}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Form.Group center={true} label={''}>\n\t\t\t\t\t\t\t<Form.Toggle\n\t\t\t\t\t\t\t\tselected={this.state.protocolType}\n\t\t\t\t\t\t\t\tselectedClass={'toggle-selected'}\n\t\t\t\t\t\t\t\tonChange={this.onProtocolTypeChange}\n\t\t\t\t\t\t\t\toptions={IP_TYPE_OPTIONS}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group full label={''}>\n\t\t\t\t\t\t\t<div className={'flex-row center'}>\n\t\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\t\tvalue={this.state.address}\n\t\t\t\t\t\t\t\t\tonChange={this.onAddressChange}\n\t\t\t\t\t\t\t\t\tstyle={{ flex: 2 }}\n\t\t\t\t\t\t\t\t\tplaceholder={'Address'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<p className={'ip-form-divider'}>/</p>\n\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\tvalue={this.state.mask}\n\t\t\t\t\t\t\t\t\tonChange={this.onMaskChange}\n\t\t\t\t\t\t\t\t\tstyle={{ flex: 1 }}\n\t\t\t\t\t\t\t\t\tplaceholder={'Mask'}\n\t\t\t\t\t\t\t\t\toptions={MASKS}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<div className={'form-row'}>\n\t\t\t\t\t\t\t<Form.Group label={'Category'}>\n\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\tvalue={this.state.category}\n\t\t\t\t\t\t\t\t\tonChange={this.onCategoryChange}\n\t\t\t\t\t\t\t\t\tplaceholder={'Select category'}\n\t\t\t\t\t\t\t\t\toptions={OBJECT_CATEGORIES}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t<Form.Group label={'Type'}>\n\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\tvalue={this.state.type}\n\t\t\t\t\t\t\t\t\tonChange={this.onTypeChange}\n\t\t\t\t\t\t\t\t\tplaceholder={'Select type'}\n\t\t\t\t\t\t\t\t\toptions={OBJECT_TYPES}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={'form-row'}>\n\t\t\t\t\t\t\t<Form.Group label={'Expiry'}>\n\t\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\t\tvalue={this.state.expiry}\n\t\t\t\t\t\t\t\t\tonChange={this.onExpiryChange}\n\t\t\t\t\t\t\t\t\tplaceholder={'Expiry'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t<Form.Group center={true} label={''}>\n\t\t\t\t\t\t\t\t<Form.Toggle\n\t\t\t\t\t\t\t\t\tselected={this.state.expiryType}\n\t\t\t\t\t\t\t\t\tselectedClass={'toggle-selected'}\n\t\t\t\t\t\t\t\t\tonChange={this.onExpiryTypeChange}\n\t\t\t\t\t\t\t\t\toptions={EXPIRATION_TYPE_OPTIONS}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<Card header={false} className={'component-coming-soon'}>\n\t\t\t\t\t\t<Form.Group full={true} label={'Description'}>\n\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\t\t\t\tonChange={this.onDescriptionChange}\n\t\t\t\t\t\t\t\tplaceholder={'Device description'}\n\t\t\t\t\t\t\t\tmultiline={true}\n\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group label={'Location'}>\n\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\tvalue={this.state.location}\n\t\t\t\t\t\t\t\tonChange={this.onLocationChange}\n\t\t\t\t\t\t\t\tplaceholder={'Select location value'}\n\t\t\t\t\t\t\t\toptions={LOCATION_TYPE_OPTIONS}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<div className={'form-row'}>\n\t\t\t\t\t\t\t{this.state.location.value === LOCATION_TYPE.REGION && (\n\t\t\t\t\t\t\t\t<Form.Group label={'Region'}>\n\t\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.region}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onRegionChange}\n\t\t\t\t\t\t\t\t\t\tplaceholder={'Select region'}\n\t\t\t\t\t\t\t\t\t\toptions={AVAILABLE_REGIONS}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this.state.location.value === LOCATION_TYPE.COORDINATES && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Form.Group label={''}>\n\t\t\t\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.lat}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onLatChange}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={'Latitude'}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Group label={''}>\n\t\t\t\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.long}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onLongChange}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={'Longitude'}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<Map\n\t\t\t\t\t\t\tstyle={{ height: '300px', width: '100%' }}\n\t\t\t\t\t\t\tcenter={[51.505, -0.09]}\n\t\t\t\t\t\t\tzoom={13}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Map>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t\t<div className={'wedge-modal__footer'}>\n\t\t\t\t\t<Footer onClick={this.onFinish} edit={this.props.edit} />\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nNewAddressSurvey.propTypes = {\n\tonFinish: PropTypes.func.isRequired,\n\tedit: PropTypes.bool,\n\titem: PropTypes.object\n}\n\nNewAddressSurvey.Footer = Footer\nexport default NewAddressSurvey\n"]},"metadata":{},"sourceType":"module"}