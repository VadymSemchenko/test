{"ast":null,"code":"import _classCallCheck from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vadym/Documents/work/job/wedge/src/components/ExpiryWarning/ExpiryWarning.jsx\";\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './expiry-warning.scss';\nimport { logoutUser } from '../../store/auth/actions';\nvar INTERVAL_TIME_SECONDS = 1;\n\nvar ExpiryWarning =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ExpiryWarning, _React$Component);\n\n  function ExpiryWarning() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ExpiryWarning);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ExpiryWarning)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      switch: false\n    };\n    return _this;\n  }\n\n  _createClass(ExpiryWarning, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        _this2.setState({\n          switch: !_this2.state.switch\n        });\n      }, INTERVAL_TIME_SECONDS * 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var expiryTime = this.props.expiryTime;\n      var now = moment();\n      var expiryMoment = moment(expiryTime);\n      var diff = expiryMoment.diff(now, 'seconds');\n\n      if (diff < INTERVAL_TIME_SECONDS) {\n        this.props.logout();\n        return null;\n      }\n\n      var show = diff < process.env.REACT_APP_EXPIRY_WARNING_THRESHOLD_SHOW;\n      return React.createElement(\"div\", {\n        className: \"expiry-warning \".concat(show ? 'visible' : 'hidden'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"You're inactive for almost \".concat(process.env.REACT_APP_TOKEN_EXPIRATION_TIME, \" minutes. Perform any actions or you will be log out in \").concat(diff, \" seconds!\"));\n    }\n  }]);\n\n  return ExpiryWarning;\n}(React.Component);\n\nExpiryWarning.propTypes = {\n  expiryTime: PropTypes.string,\n  logout: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    expiryTime: state.auth.tokenExpireAt\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    logout: function logout() {\n      return dispatch(logoutUser());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpiryWarning);","map":{"version":3,"sources":["/Users/vadym/Documents/work/job/wedge/src/components/ExpiryWarning/ExpiryWarning.jsx"],"names":["moment","PropTypes","React","connect","logoutUser","INTERVAL_TIME_SECONDS","ExpiryWarning","state","switch","interval","setInterval","setState","clearInterval","expiryTime","props","now","expiryMoment","diff","logout","show","process","env","REACT_APP_EXPIRY_WARNING_THRESHOLD_SHOW","REACT_APP_TOKEN_EXPIRATION_TIME","Component","propTypes","string","func","isRequired","mapStateToProps","auth","tokenExpireAt","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,uBAAP;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,IAAMC,qBAAqB,GAAG,CAA9B;;IAEMC,a;;;;;;;;;;;;;;;;;UACLC,K,GAAQ;AACPC,MAAAA,MAAM,EAAE;AADD,K;;;;;;wCAIY;AAAA;;AACnB,WAAKC,QAAL,GAAgBC,WAAW,CAAC,YAAM;AACjC,QAAA,MAAI,CAACC,QAAL,CAAc;AACbH,UAAAA,MAAM,EAAE,CAAC,MAAI,CAACD,KAAL,CAAWC;AADP,SAAd;AAGA,OAJ0B,EAIxBH,qBAAqB,GAAG,IAJA,CAA3B;AAKA;;;2CAEsB;AACtBO,MAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACA;;;6BAEQ;AAAA,UACAI,UADA,GACe,KAAKC,KADpB,CACAD,UADA;AAER,UAAME,GAAG,GAAGf,MAAM,EAAlB;AACA,UAAMgB,YAAY,GAAGhB,MAAM,CAACa,UAAD,CAA3B;AACA,UAAMI,IAAI,GAAGD,YAAY,CAACC,IAAb,CAAkBF,GAAlB,EAAuB,SAAvB,CAAb;;AACA,UAAIE,IAAI,GAAGZ,qBAAX,EAAkC;AACjC,aAAKS,KAAL,CAAWI,MAAX;AACA,eAAO,IAAP;AACA;;AACD,UAAMC,IAAI,GAAGF,IAAI,GAAGG,OAAO,CAACC,GAAR,CAAYC,uCAAhC;AACA,aACC;AAAK,QAAA,SAAS,2BAAoBH,IAAI,GAAG,SAAH,GAAe,QAAvC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEEC,OAAO,CAACC,GAAR,CAAYE,+BAFd,qEAG4DN,IAH5D,eADD;AAOA;;;;EAlC0Bf,KAAK,CAACsB,S;;AAqClClB,aAAa,CAACmB,SAAd,GAA0B;AACzBZ,EAAAA,UAAU,EAAEZ,SAAS,CAACyB,MADG;AAEzBR,EAAAA,MAAM,EAAEjB,SAAS,CAAC0B,IAAV,CAAeC;AAFE,CAA1B;;AAKA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAtB,KAAK;AAAA,SAAK;AAAEM,IAAAA,UAAU,EAAEN,KAAK,CAACuB,IAAN,CAAWC;AAAzB,GAAL;AAAA,CAA7B;;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACvCf,IAAAA,MAAM,EAAE;AAAA,aAAMe,QAAQ,CAAC7B,UAAU,EAAX,CAAd;AAAA;AAD+B,GAAL;AAAA,CAAnC;;AAIA,eAAeD,OAAO,CACrB0B,eADqB,EAErBG,kBAFqB,CAAP,CAGb1B,aAHa,CAAf","sourcesContent":["import moment from 'moment'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport './expiry-warning.scss'\nimport { logoutUser } from '../../store/auth/actions'\n\nconst INTERVAL_TIME_SECONDS = 1\n\nclass ExpiryWarning extends React.Component {\n\tstate = {\n\t\tswitch: false\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.interval = setInterval(() => {\n\t\t\tthis.setState({\n\t\t\t\tswitch: !this.state.switch\n\t\t\t})\n\t\t}, INTERVAL_TIME_SECONDS * 1000)\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.interval)\n\t}\n\n\trender() {\n\t\tconst { expiryTime } = this.props\n\t\tconst now = moment()\n\t\tconst expiryMoment = moment(expiryTime)\n\t\tconst diff = expiryMoment.diff(now, 'seconds')\n\t\tif (diff < INTERVAL_TIME_SECONDS) {\n\t\t\tthis.props.logout()\n\t\t\treturn null\n\t\t}\n\t\tconst show = diff < process.env.REACT_APP_EXPIRY_WARNING_THRESHOLD_SHOW\n\t\treturn (\n\t\t\t<div className={`expiry-warning ${show ? 'visible' : 'hidden'}`}>\n\t\t\t\t{`You're inactive for almost ${\n\t\t\t\t\tprocess.env.REACT_APP_TOKEN_EXPIRATION_TIME\n\t\t\t\t} minutes. Perform any actions or you will be log out in ${diff} seconds!`}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nExpiryWarning.propTypes = {\n\texpiryTime: PropTypes.string,\n\tlogout: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({ expiryTime: state.auth.tokenExpireAt })\nconst mapDispatchToProps = dispatch => ({\n\tlogout: () => dispatch(logoutUser())\n})\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(ExpiryWarning)\n"]},"metadata":{},"sourceType":"module"}