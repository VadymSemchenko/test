{"ast":null,"code":"import _regeneratorRuntime from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as REST from '../api/rest';\nimport { clearData, logoutUser } from './auth/actions';\nimport { fetchingEcosystemsStarted, fetchingEcosystemsSuccess, fetchingEcosystemsFailure } from './ecosystems/actions';\nimport { finishStartup } from './global/actions';\nimport { setError } from './user/actions';\nexport function startup() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!getState().auth.isAuthenticated) {\n                  _context.next = 17;\n                  break;\n                }\n\n                _context.prev = 1;\n                dispatch(fetchingEcosystemsStarted());\n                _context.next = 5;\n                return REST.fetchEcosystems({\n                  customer: getState().auth.selectedCustomer.id\n                });\n\n              case 5:\n                results = _context.sent;\n                dispatch(fetchingEcosystemsSuccess(results));\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](1);\n                dispatch(fetchingEcosystemsFailure(_context.t0));\n\n              case 12:\n                _context.prev = 12;\n                dispatch(finishStartup());\n                return _context.finish(12);\n\n              case 15:\n                _context.next = 18;\n                break;\n\n              case 17:\n                dispatch(finishStartup());\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 9, 12, 15]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\nexport function logout() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return REST.logout();\n\n              case 3:\n                _context2.prev = 3;\n                dispatch(logoutUser());\n                dispatch(setError('You have been logged out'));\n                dispatch(clearData());\n                return _context2.finish(3);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0,, 3, 8]]);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n}","map":{"version":3,"sources":["/Users/vadym/Documents/work/job/wedge/src/store/common-scenario-actions.js"],"names":["REST","clearData","logoutUser","fetchingEcosystemsStarted","fetchingEcosystemsSuccess","fetchingEcosystemsFailure","finishStartup","setError","startup","dispatch","getState","auth","isAuthenticated","fetchEcosystems","customer","selectedCustomer","id","results","logout"],"mappings":";;AAAA,OAAO,KAAKA,IAAZ,MAAsB,aAAtB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,gBAAtC;AACA,SACCC,yBADD,EAECC,yBAFD,EAGCC,yBAHD,QAIO,sBAJP;AAKA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACzB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACFA,QAAQ,GAAGC,IAAX,CAAgBC,eADd;AAAA;AAAA;AAAA;;AAAA;AAGJH,gBAAAA,QAAQ,CAACN,yBAAyB,EAA1B,CAAR;AAHI;AAAA,uBAIkBH,IAAI,CAACa,eAAL,CAAqB;AAC1CC,kBAAAA,QAAQ,EAAEJ,QAAQ,GAAGC,IAAX,CAAgBI,gBAAhB,CAAiCC;AADD,iBAArB,CAJlB;;AAAA;AAIEC,gBAAAA,OAJF;AAOJR,gBAAAA,QAAQ,CAACL,yBAAyB,CAACa,OAAD,CAA1B,CAAR;AAPI;AAAA;;AAAA;AAAA;AAAA;AASJR,gBAAAA,QAAQ,CAACJ,yBAAyB,aAA1B,CAAR;;AATI;AAAA;AAWJI,gBAAAA,QAAQ,CAACH,aAAa,EAAd,CAAR;AAXI;;AAAA;AAAA;AAAA;;AAAA;AAcLG,gBAAAA,QAAQ,CAACH,aAAa,EAAd,CAAR;;AAdK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAED,OAAO,SAASY,MAAT,GAAkB;AACxB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAMT,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAECT,IAAI,CAACkB,MAAL,EAFD;;AAAA;AAAA;AAILT,gBAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;AACAO,gBAAAA,QAAQ,CAACF,QAAQ,CAAC,0BAAD,CAAT,CAAR;AACAE,gBAAAA,QAAQ,CAACR,SAAS,EAAV,CAAR;AANK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AASA","sourcesContent":["import * as REST from '../api/rest'\nimport { clearData, logoutUser } from './auth/actions'\nimport {\n\tfetchingEcosystemsStarted,\n\tfetchingEcosystemsSuccess,\n\tfetchingEcosystemsFailure\n} from './ecosystems/actions'\nimport { finishStartup } from './global/actions'\nimport { setError } from './user/actions'\n\nexport function startup() {\n\treturn async (dispatch, getState) => {\n\t\tif (getState().auth.isAuthenticated) {\n\t\t\ttry {\n\t\t\t\tdispatch(fetchingEcosystemsStarted())\n\t\t\t\tconst results = await REST.fetchEcosystems({\n\t\t\t\t\tcustomer: getState().auth.selectedCustomer.id\n\t\t\t\t})\n\t\t\t\tdispatch(fetchingEcosystemsSuccess(results))\n\t\t\t} catch (err) {\n\t\t\t\tdispatch(fetchingEcosystemsFailure(err))\n\t\t\t} finally {\n\t\t\t\tdispatch(finishStartup())\n\t\t\t}\n\t\t} else {\n\t\t\tdispatch(finishStartup())\n\t\t}\n\t}\n}\n\nexport function logout() {\n\treturn async dispatch => {\n\t\ttry {\n\t\t\tawait REST.logout()\n\t\t} finally {\n\t\t\tdispatch(logoutUser())\n\t\t\tdispatch(setError('You have been logged out'))\n\t\t\tdispatch(clearData())\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}