{"ast":null,"code":"import _defineProperty from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar loadingReducer = function loadingReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type;\n  var matches = /(.*)_(REQUEST|SUCCESS|FAILURE)/.exec(type); // not a *_REQUEST / *_SUCCESS /  *_FAILURE actions, so we ignore them\n\n  if (!matches) return state;\n\n  var _matches = _slicedToArray(matches, 3),\n      requestName = _matches[1],\n      requestState = _matches[2];\n\n  return _objectSpread({}, state, _defineProperty({}, requestName, requestState === 'REQUEST'));\n};\n\nexport default loadingReducer;","map":{"version":3,"sources":["/Users/vadym/Documents/work/job/wedge/src/store/loading/reducer.js"],"names":["loadingReducer","state","action","type","matches","exec","requestName","requestState"],"mappings":";;;;AAAA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AAAA,MACtCC,IADsC,GAC7BD,MAD6B,CACtCC,IADsC;AAE9C,MAAMC,OAAO,GAAG,iCAAiCC,IAAjC,CAAsCF,IAAtC,CAAhB,CAF8C,CAI9C;;AACA,MAAI,CAACC,OAAL,EAAc,OAAOH,KAAP;;AALgC,gCAORG,OAPQ;AAAA,MAOrCE,WAPqC;AAAA,MAOxBC,YAPwB;;AAQ9C,2BACIN,KADJ,sBAKEK,WALF,EAKgBC,YAAY,KAAK,SALjC;AAOA,CAfD;;AAiBA,eAAeP,cAAf","sourcesContent":["const loadingReducer = (state = {}, action) => {\n\tconst { type } = action\n\tconst matches = /(.*)_(REQUEST|SUCCESS|FAILURE)/.exec(type)\n\n\t// not a *_REQUEST / *_SUCCESS /  *_FAILURE actions, so we ignore them\n\tif (!matches) return state\n\n\tconst [, requestName, requestState] = matches\n\treturn {\n\t\t...state,\n\t\t// Store whether a request is happening at the moment or not\n\t\t// e.g. will be true when receiving GET_TODOS_REQUEST\n\t\t//      and false when receiving GET_TODOS_SUCCESS / GET_TODOS_FAILURE\n\t\t[requestName]: requestState === 'REQUEST'\n\t}\n}\n\nexport default loadingReducer\n"]},"metadata":{},"sourceType":"module"}