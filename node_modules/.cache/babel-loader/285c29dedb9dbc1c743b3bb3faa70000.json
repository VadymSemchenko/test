{"ast":null,"code":"import _objectSpread from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport moment from 'moment';\nimport { LOCAL_ACCESS_TOKEN_EXPIRY_TIME, LOCAL_ACCESS_TOKEN_KEY, LOCAL_CUSTOMER_KEY } from '../../enums';\nimport { extractCustomerFromToken, extractUsernameFromToken } from '../../utils/utils';\nimport { LOGIN_FAILURE, LOGIN_SUCCESS, LOGOUT_USER, RENEW_TOKEN, SET_CUSTOMER } from './action-types';\nvar expiryTimeFromStorage = localStorage.getItem(LOCAL_ACCESS_TOKEN_EXPIRY_TIME);\nvar tokenFromStorage = localStorage.getItem(LOCAL_ACCESS_TOKEN_KEY);\nvar customer = localStorage.getItem(LOCAL_CUSTOMER_KEY);\nvar initialState;\n\nif (tokenFromStorage) {\n  initialState = {\n    isAuthenticated: expiryTimeFromStorage !== null && moment(expiryTimeFromStorage).isAfter(),\n    tokenExpireAt: expiryTimeFromStorage !== null && moment(expiryTimeFromStorage).isAfter() ? expiryTimeFromStorage : null,\n    customers: extractCustomerFromToken(tokenFromStorage),\n    selectedCustomer: customer !== null ? JSON.parse(customer) : {},\n    username: extractUsernameFromToken(tokenFromStorage)\n  };\n} else {\n  initialState = {\n    isAuthenticated: false,\n    tokenExpireAt: '',\n    customers: [],\n    selectedCustomer: null,\n    username: ''\n  };\n}\n\nexport function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  var expiryTime = moment().add(process.env.REACT_APP_TOKEN_EXPIRATION_TIME, 'minutes').toISOString();\n\n  switch (type) {\n    case LOGIN_FAILURE:\n      localStorage.removeItem(LOCAL_ACCESS_TOKEN_KEY);\n      return _objectSpread({}, state, {\n        isAuthenticated: false,\n        selectedCustomer: null,\n        customers: []\n      });\n\n    case LOGIN_SUCCESS:\n      localStorage.setItem(LOCAL_ACCESS_TOKEN_KEY, payload.accessToken);\n      localStorage.setItem(LOCAL_ACCESS_TOKEN_EXPIRY_TIME, expiryTime);\n      return _objectSpread({}, state, {\n        isAuthenticated: true,\n        tokenExpireAt: expiryTime,\n        customers: payload.customers,\n        username: extractUsernameFromToken(payload.accessToken)\n      });\n\n    case LOGOUT_USER:\n      localStorage.removeItem(LOCAL_ACCESS_TOKEN_EXPIRY_TIME);\n      localStorage.removeItem(LOCAL_ACCESS_TOKEN_KEY);\n      localStorage.removeItem(LOCAL_CUSTOMER_KEY);\n      return _objectSpread({}, state, {\n        isAuthenticated: false,\n        selectedCustomer: null,\n        tokenExpireAt: '',\n        customers: [],\n        username: ''\n      });\n\n    case RENEW_TOKEN:\n      localStorage.setItem(LOCAL_ACCESS_TOKEN_EXPIRY_TIME, expiryTime);\n      return _objectSpread({}, state, {\n        tokenExpireAt: expiryTime\n      });\n\n    case SET_CUSTOMER:\n      localStorage.setItem(LOCAL_CUSTOMER_KEY, JSON.stringify(payload));\n      return _objectSpread({}, state, {\n        selectedCustomer: payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/vadym/Documents/work/job/wedge/src/store/auth/reducer.js"],"names":["moment","LOCAL_ACCESS_TOKEN_EXPIRY_TIME","LOCAL_ACCESS_TOKEN_KEY","LOCAL_CUSTOMER_KEY","extractCustomerFromToken","extractUsernameFromToken","LOGIN_FAILURE","LOGIN_SUCCESS","LOGOUT_USER","RENEW_TOKEN","SET_CUSTOMER","expiryTimeFromStorage","localStorage","getItem","tokenFromStorage","customer","initialState","isAuthenticated","isAfter","tokenExpireAt","customers","selectedCustomer","JSON","parse","username","authReducer","state","type","payload","expiryTime","add","process","env","REACT_APP_TOKEN_EXPIRATION_TIME","toISOString","removeItem","setItem","accessToken","stringify"],"mappings":"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","sourcesContent":["import moment from 'moment'\nimport {\n\tLOCAL_ACCESS_TOKEN_EXPIRY_TIME,\n\tLOCAL_ACCESS_TOKEN_KEY,\n\tLOCAL_CUSTOMER_KEY\n} from '../../enums'\nimport {\n\textractCustomerFromToken,\n\textractUsernameFromToken\n} from '../../utils/utils'\nimport {\n\tLOGIN_FAILURE,\n\tLOGIN_SUCCESS,\n\tLOGOUT_USER,\n\tRENEW_TOKEN,\n\tSET_CUSTOMER\n} from './action-types'\n\nconst expiryTimeFromStorage = localStorage.getItem(\n\tLOCAL_ACCESS_TOKEN_EXPIRY_TIME\n)\nconst tokenFromStorage = localStorage.getItem(LOCAL_ACCESS_TOKEN_KEY)\nconst customer = localStorage.getItem(LOCAL_CUSTOMER_KEY)\n\nlet initialState\n\nif (tokenFromStorage) {\n\tinitialState = {\n\t\tisAuthenticated:\n\t\t\texpiryTimeFromStorage !== null && moment(expiryTimeFromStorage).isAfter(),\n\t\ttokenExpireAt:\n\t\t\texpiryTimeFromStorage !== null && moment(expiryTimeFromStorage).isAfter()\n\t\t\t\t? expiryTimeFromStorage\n\t\t\t\t: null,\n\t\tcustomers: extractCustomerFromToken(tokenFromStorage),\n\t\tselectedCustomer: customer !== null ? JSON.parse(customer) : {},\n\t\tusername: extractUsernameFromToken(tokenFromStorage)\n\t}\n} else {\n\tinitialState = {\n\t\tisAuthenticated: false,\n\t\ttokenExpireAt: '',\n\t\tcustomers: [],\n\t\tselectedCustomer: null,\n\t\tusername: ''\n\t}\n}\n\nexport function authReducer(state = initialState, { type, payload }) {\n\tconst expiryTime = moment()\n\t\t.add(process.env.REACT_APP_TOKEN_EXPIRATION_TIME, 'minutes')\n\t\t.toISOString()\n\n\tswitch (type) {\n\t\tcase LOGIN_FAILURE:\n\t\t\tlocalStorage.removeItem(LOCAL_ACCESS_TOKEN_KEY)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisAuthenticated: false,\n\t\t\t\tselectedCustomer: null,\n\t\t\t\tcustomers: []\n\t\t\t}\n\t\tcase LOGIN_SUCCESS:\n\t\t\tlocalStorage.setItem(LOCAL_ACCESS_TOKEN_KEY, payload.accessToken)\n\t\t\tlocalStorage.setItem(LOCAL_ACCESS_TOKEN_EXPIRY_TIME, expiryTime)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisAuthenticated: true,\n\t\t\t\ttokenExpireAt: expiryTime,\n\t\t\t\tcustomers: payload.customers,\n\t\t\t\tusername: extractUsernameFromToken(payload.accessToken)\n\t\t\t}\n\t\tcase LOGOUT_USER:\n\t\t\tlocalStorage.removeItem(LOCAL_ACCESS_TOKEN_EXPIRY_TIME)\n\t\t\tlocalStorage.removeItem(LOCAL_ACCESS_TOKEN_KEY)\n\t\t\tlocalStorage.removeItem(LOCAL_CUSTOMER_KEY)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisAuthenticated: false,\n\t\t\t\tselectedCustomer: null,\n\t\t\t\ttokenExpireAt: '',\n\t\t\t\tcustomers: [],\n\t\t\t\tusername: ''\n\t\t\t}\n\t\tcase RENEW_TOKEN:\n\t\t\tlocalStorage.setItem(LOCAL_ACCESS_TOKEN_EXPIRY_TIME, expiryTime)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttokenExpireAt: expiryTime\n\t\t\t}\n\t\tcase SET_CUSTOMER:\n\t\t\tlocalStorage.setItem(LOCAL_CUSTOMER_KEY, JSON.stringify(payload))\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedCustomer: payload\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}