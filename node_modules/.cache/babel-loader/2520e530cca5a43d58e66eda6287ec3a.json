{"ast":null,"code":"import _classCallCheck from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vadym/Documents/work/job/wedge/src/views/LoginForm/LoginForm.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { LOGIN_EMAIL, LOGIN_PASSWORD } from '../../assets/Icons';\nimport { createErrorMessageSelector, createLoadingSelector } from '../../store/utils/selectors';\nimport './login-form.scss';\nimport { login as _login } from './scenario-actions';\nimport { clearError as _clearLogoutError } from '../../store/user/actions';\nimport ErrorPanel from '../../components/ErrorPanel/ErrorPanel';\nimport { errorSelector as logoutErrorSelector } from '../../store/user/selectors';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      authError: 'You are not logged in!'\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var data = new FormData(e.target);\n\n      var _ref = _this.props.location.state || {\n        from: {\n          pathname: '/'\n        }\n      },\n          from = _ref.from;\n\n      var email = data.get('email');\n      var password = data.get('password');\n\n      _this.props.login({\n        email: email,\n        password: password\n      }, from);\n    };\n\n    _this.removeErrorMessage = function () {\n      var _this$props = _this.props,\n          logoutError = _this$props.logoutError,\n          clearLogoutError = _this$props.clearLogoutError;\n      logoutError ? clearLogoutError() : _this.setState({\n        authError: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var authError = this.state.authError;\n      return React.createElement(\"div\", {\n        className: 'login-form-page--content',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'login-form',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: 'title',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Log in\"), this.props.error && React.createElement(\"div\", {\n        className: 'alert alert-danger',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.props.error), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, authError && React.createElement(ErrorPanel, {\n        message: authError,\n        buttonClickHandler: this.removeErrorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: 'input-container',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'icon-container',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: LOGIN_EMAIL,\n        className: 'input-icon',\n        alt: 'input-icon',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        name: 'email',\n        placeholder: 'Email',\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: 'input-container',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'icon-container',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: LOGIN_PASSWORD,\n        className: 'input-icon',\n        alt: 'input-icon',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        name: 'password',\n        placeholder: 'Password',\n        type: 'password',\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: 'login-rememberme-container component-coming-soon',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: 'checkbox-label wedge-checkbox-container',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: true,\n        onChange: function onChange() {\n          return function () {};\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: 'checkmark',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: 'title',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Remember me\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Forgot your password?\")), React.createElement(\"input\", {\n        type: \"submit\",\n        className: 'login-button',\n        value: 'Log in',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref2) {\n      var logoutError = _ref2.logoutError;\n      if (logoutError) return {\n        authError: logoutError\n      };else return null;\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nLoginForm.propTypes = {\n  login: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  location: PropTypes.object.isRequired,\n  clearLogoutError: PropTypes.func.isRequired,\n  logoutError: PropTypes.string.isRequired\n};\nLoginForm.defaultProps = {\n  error: '',\n  isLoading: false\n};\nvar loadingSelector = createLoadingSelector(['LOGIN']);\nvar errorSelector = createErrorMessageSelector(['LOGIN']);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: loadingSelector(state),\n    error: errorSelector(state),\n    logoutError: logoutErrorSelector(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    login: function login(credentials, redirect) {\n      return dispatch(_login(credentials, redirect));\n    },\n    clearLogoutError: function clearLogoutError() {\n      return dispatch(_clearLogoutError());\n    }\n  };\n};\n\nvar ConnectedLogin = connect(mapStateToProps, mapDispatchToProps)(LoginForm);\nexport default withRouter(ConnectedLogin);","map":{"version":3,"sources":["/Users/vadym/Documents/work/job/wedge/src/views/LoginForm/LoginForm.jsx"],"names":["PropTypes","React","Component","connect","withRouter","LOGIN_EMAIL","LOGIN_PASSWORD","createErrorMessageSelector","createLoadingSelector","login","clearError","clearLogoutError","ErrorPanel","errorSelector","logoutErrorSelector","LoginForm","state","authError","handleSubmit","e","preventDefault","data","FormData","target","props","location","from","pathname","email","get","password","removeErrorMessage","logoutError","setState","error","propTypes","func","isRequired","string","isLoading","bool","object","defaultProps","loadingSelector","mapStateToProps","mapDispatchToProps","dispatch","credentials","redirect","ConnectedLogin"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { LOGIN_EMAIL, LOGIN_PASSWORD } from '../../assets/Icons'\nimport {\n\tcreateErrorMessageSelector,\n\tcreateLoadingSelector\n} from '../../store/utils/selectors'\nimport './login-form.scss'\nimport { login } from './scenario-actions'\nimport { clearError as clearLogoutError } from '../../store/user/actions'\nimport ErrorPanel from '../../components/ErrorPanel/ErrorPanel'\nimport { errorSelector as logoutErrorSelector } from '../../store/user/selectors'\n\nclass LoginForm extends Component {\n\tstate = {\n\t\tauthError: 'You are not logged in!'\n\t}\n\n\tstatic getDerivedStateFromProps({ logoutError }) {\n\t\tif (logoutError) return { authError: logoutError }\n\t\telse return null\n\t}\n\n\thandleSubmit = e => {\n\t\te.preventDefault()\n\t\tconst data = new FormData(e.target)\n\t\tconst { from } = this.props.location.state || { from: { pathname: '/' } }\n\n\t\tconst email = data.get('email')\n\t\tconst password = data.get('password')\n\t\tthis.props.login({ email, password }, from)\n\t}\n\n\tremoveErrorMessage = () => {\n\t\tconst { logoutError, clearLogoutError } = this.props\n\t\tlogoutError ? clearLogoutError() : this.setState({ authError: '' })\n\t}\n\n\trender() {\n\t\tconst { authError } = this.state\n\t\treturn (\n\t\t\t<div className={'login-form-page--content'}>\n\t\t\t\t<div className={'login-form'}>\n\t\t\t\t\t<h2 className={'title'}>Log in</h2>\n\t\t\t\t\t{this.props.error && (\n\t\t\t\t\t\t<div className={'alert alert-danger'}>{this.props.error}</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t{authError && (\n\t\t\t\t\t\t\t<ErrorPanel\n\t\t\t\t\t\t\t\tmessage={authError}\n\t\t\t\t\t\t\t\tbuttonClickHandler={this.removeErrorMessage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div className={'input-container'}>\n\t\t\t\t\t\t\t<div className={'icon-container'}>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={LOGIN_EMAIL}\n\t\t\t\t\t\t\t\t\tclassName={'input-icon'}\n\t\t\t\t\t\t\t\t\talt={'input-icon'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input name={'email'} placeholder={'Email'} required={true} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={'input-container'}>\n\t\t\t\t\t\t\t<div className={'icon-container'}>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={LOGIN_PASSWORD}\n\t\t\t\t\t\t\t\t\tclassName={'input-icon'}\n\t\t\t\t\t\t\t\t\talt={'input-icon'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname={'password'}\n\t\t\t\t\t\t\t\tplaceholder={'Password'}\n\t\t\t\t\t\t\t\ttype={'password'}\n\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={'login-rememberme-container component-coming-soon'}>\n\t\t\t\t\t\t\t<label className={'checkbox-label wedge-checkbox-container'}>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tchecked={true}\n\t\t\t\t\t\t\t\t\tonChange={() => () => {}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className={'checkmark'} />\n\t\t\t\t\t\t\t\t<span className={'title'}>Remember me</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<p>Forgot your password?</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input type=\"submit\" className={'login-button'} value={'Log in'} />\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nLoginForm.propTypes = {\n\tlogin: PropTypes.func.isRequired,\n\terror: PropTypes.string.isRequired,\n\tisLoading: PropTypes.bool.isRequired,\n\tlocation: PropTypes.object.isRequired,\n\tclearLogoutError: PropTypes.func.isRequired,\n\tlogoutError: PropTypes.string.isRequired\n}\n\nLoginForm.defaultProps = {\n\terror: '',\n\tisLoading: false\n}\n\nconst loadingSelector = createLoadingSelector(['LOGIN'])\nconst errorSelector = createErrorMessageSelector(['LOGIN'])\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tisLoading: loadingSelector(state),\n\t\terror: errorSelector(state),\n\t\tlogoutError: logoutErrorSelector(state)\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tlogin: (credentials, redirect) => dispatch(login(credentials, redirect)),\n\t\tclearLogoutError: () => dispatch(clearLogoutError())\n\t}\n}\n\nconst ConnectedLogin = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(LoginForm)\nexport default withRouter(ConnectedLogin)\n"]},"metadata":{},"sourceType":"module"}