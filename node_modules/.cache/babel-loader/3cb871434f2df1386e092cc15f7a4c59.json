{"ast":null,"code":"import _objectSpread from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vadym/Documents/work/job/wedge/src/components/Form/Form.jsx\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, ButtonGroup } from 'react-bootstrap';\nimport Select from 'react-select';\nimport './form.scss';\n\nvar FormGroup =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(FormGroup, _React$PureComponent);\n\n  function FormGroup() {\n    _classCallCheck(this, FormGroup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FormGroup).apply(this, arguments));\n  }\n\n  _createClass(FormGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          label = _this$props.label,\n          _this$props$center = _this$props.center,\n          center = _this$props$center === void 0 ? false : _this$props$center,\n          _this$props$full = _this$props.full,\n          full = _this$props$full === void 0 ? false : _this$props$full,\n          _this$props$self = _this$props.self,\n          self = _this$props$self === void 0 ? false : _this$props$self,\n          _this$props$required = _this$props.required,\n          required = _this$props$required === void 0 ? false : _this$props$required,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"label\", \"center\", \"full\", \"self\", \"required\"]);\n\n      return React.createElement(\"div\", {\n        className: \"form__group\".concat(center ? '-center' : '', \" \").concat(full ? 'full' : '', \" \").concat(self ? 'self' : '', \" \").concat(rest.extraClass || ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: 'form__label',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, label, required && React.createElement(\"span\", {\n        className: 'asterisk',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"*\")), children);\n    }\n  }]);\n\n  return FormGroup;\n}(React.PureComponent);\n\nFormGroup.propTypes = {\n  children: PropTypes.element,\n  label: PropTypes.string,\n  center: PropTypes.bool,\n  full: PropTypes.bool,\n  self: PropTypes.bool,\n  required: PropTypes.bool\n};\n\nvar TextInput =\n/*#__PURE__*/\nfunction (_React$PureComponent2) {\n  _inherits(TextInput, _React$PureComponent2);\n\n  function TextInput() {\n    _classCallCheck(this, TextInput);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TextInput).apply(this, arguments));\n  }\n\n  _createClass(TextInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          value = _this$props2.value,\n          placeholder = _this$props2.placeholder,\n          _onChange = _this$props2.onChange,\n          extraClass = _this$props2.extraClass,\n          multiline = _this$props2.multiline,\n          rest = _objectWithoutProperties(_this$props2, [\"value\", \"placeholder\", \"onChange\", \"extraClass\", \"multiline\"]);\n\n      this.inputProps = _objectSpread({\n        type: 'text',\n        value: value,\n        placeholder: placeholder,\n        onChange: function onChange(e) {\n          return _onChange(e.target.value);\n        },\n        className: \"form__input form__textinput \".concat(multiline ? 'multiline' : '', \" \").concat(extraClass || '')\n      }, rest);\n\n      if (multiline) {\n        return React.createElement(\"textarea\", Object.assign({}, this.inputProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"input\", Object.assign({}, this.inputProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return TextInput;\n}(React.PureComponent);\n\nTextInput.propTypes = {\n  placeholder: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func\n};\n\nvar ToggleButton =\n/*#__PURE__*/\nfunction (_React$PureComponent3) {\n  _inherits(ToggleButton, _React$PureComponent3);\n\n  function ToggleButton() {\n    _classCallCheck(this, ToggleButton);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ToggleButton).apply(this, arguments));\n  }\n\n  _createClass(ToggleButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          selectedClass = _this$props3.selectedClass,\n          selected = _this$props3.selected,\n          onChange = _this$props3.onChange,\n          options = _this$props3.options;\n      return React.createElement(ButtonGroup, {\n        className: 'space-above',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, options.map(function (opt) {\n        return React.createElement(Button, {\n          key: \"toggle-button-index-key-\".concat(opt.value, \"-\").concat(opt.name),\n          onClick: function onClick() {\n            return onChange(opt.value);\n          },\n          className: \"form__input form__toggle \".concat(selected === opt.value ? selectedClass : ''),\n          bsStyle: selected === opt.value ? 'primary' : 'default',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, opt.label);\n      }));\n    }\n  }]);\n\n  return ToggleButton;\n}(React.PureComponent);\n\nToggleButton.propTypes = {\n  selectedClass: PropTypes.string,\n  selected: PropTypes.any,\n  onChange: PropTypes.func,\n  options: PropTypes.array\n};\nvar colourStyles = {\n  control: function control(styles) {\n    return _objectSpread({}, styles, {\n      backgroundColor: 'white',\n      paddingLeft: 0,\n      boxShadow: 'none',\n      '&:hover': {\n        borderColor: '#f68b1e'\n      },\n      border: '1px solid transparent'\n    });\n  },\n  indicatorSeparator: function indicatorSeparator(styles) {\n    return _objectSpread({}, styles, {\n      width: 0\n    });\n  },\n  menuContainerStyle: function menuContainerStyle(styles) {\n    return _objectSpread({}, styles, {\n      zIndex: 50005\n    });\n  },\n  menu: function menu(styles) {\n    return _objectSpread({}, styles, {\n      zIndex: 101\n    });\n  }\n};\n\nvar SelectInput =\n/*#__PURE__*/\nfunction (_React$PureComponent4) {\n  _inherits(SelectInput, _React$PureComponent4);\n\n  function SelectInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SelectInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SelectInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.emptyFunction = function () {};\n\n    return _this;\n  }\n\n  _createClass(SelectInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          placeholder = _this$props4.placeholder,\n          value = _this$props4.value,\n          onChange = _this$props4.onChange,\n          options = _this$props4.options;\n      return React.createElement(Select, {\n        className: 'form__input form__select',\n        name: \"color\",\n        placeholder: placeholder,\n        value: value,\n        onChange: onChange || this.emptyFunction,\n        options: options,\n        styles: colourStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SelectInput;\n}(React.PureComponent);\n\nSelectInput.propTypes = {\n  placeholder: PropTypes.string,\n  value: PropTypes.any,\n  onChange: PropTypes.func,\n  options: PropTypes.array\n};\nexport default {\n  Group: FormGroup,\n  Text: TextInput,\n  Select: SelectInput,\n  Toggle: ToggleButton\n};","map":{"version":3,"sources":["/Users/vadym/Documents/work/job/wedge/src/components/Form/Form.jsx"],"names":["PropTypes","React","Button","ButtonGroup","Select","FormGroup","props","children","label","center","full","self","required","rest","extraClass","PureComponent","propTypes","element","string","bool","TextInput","value","placeholder","onChange","multiline","inputProps","type","e","target","className","oneOfType","number","func","ToggleButton","selectedClass","selected","options","map","opt","name","any","array","colourStyles","control","styles","backgroundColor","paddingLeft","boxShadow","borderColor","border","indicatorSeparator","width","menuContainerStyle","zIndex","menu","SelectInput","emptyFunction","Group","Text","Toggle"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport { Button, ButtonGroup } from 'react-bootstrap'\nimport Select from 'react-select'\nimport './form.scss'\n\nclass FormGroup extends React.PureComponent {\n\trender() {\n\t\tconst {\n\t\t\tchildren,\n\t\t\tlabel,\n\t\t\tcenter = false,\n\t\t\tfull = false,\n\t\t\tself = false,\n\t\t\trequired = false,\n\t\t\t...rest\n\t\t} = this.props\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`form__group${center ? '-center' : ''} ${\n\t\t\t\t\tfull ? 'full' : ''\n\t\t\t\t} ${self ? 'self' : ''} ${rest.extraClass || ''}`}\n\t\t\t>\n\t\t\t\t<p className={'form__label'}>\n\t\t\t\t\t{label}\n\t\t\t\t\t{required && <span className={'asterisk'}>*</span>}\n\t\t\t\t</p>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nFormGroup.propTypes = {\n\tchildren: PropTypes.element,\n\tlabel: PropTypes.string,\n\tcenter: PropTypes.bool,\n\tfull: PropTypes.bool,\n\tself: PropTypes.bool,\n\trequired: PropTypes.bool\n}\n\nclass TextInput extends React.PureComponent {\n\trender() {\n\t\tconst {\n\t\t\tvalue,\n\t\t\tplaceholder,\n\t\t\tonChange,\n\t\t\textraClass,\n\t\t\tmultiline,\n\t\t\t...rest\n\t\t} = this.props\n\t\tthis.inputProps = {\n\t\t\ttype: 'text',\n\t\t\tvalue: value,\n\t\t\tplaceholder: placeholder,\n\t\t\tonChange: e => onChange(e.target.value),\n\t\t\tclassName: `form__input form__textinput ${\n\t\t\t\tmultiline ? 'multiline' : ''\n\t\t\t} ${extraClass || ''}`,\n\t\t\t...rest\n\t\t}\n\t\tif (multiline) {\n\t\t\treturn <textarea {...this.inputProps} />\n\t\t} else {\n\t\t\treturn <input {...this.inputProps} />\n\t\t}\n\t}\n}\n\nTextInput.propTypes = {\n\tplaceholder: PropTypes.string,\n\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\tonChange: PropTypes.func\n}\n\nclass ToggleButton extends React.PureComponent {\n\trender() {\n\t\tconst { selectedClass, selected, onChange, options } = this.props\n\t\treturn (\n\t\t\t<ButtonGroup className={'space-above'}>\n\t\t\t\t{options.map(opt => (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkey={`toggle-button-index-key-${opt.value}-${opt.name}`}\n\t\t\t\t\t\tonClick={() => onChange(opt.value)}\n\t\t\t\t\t\tclassName={`form__input form__toggle ${\n\t\t\t\t\t\t\tselected === opt.value ? selectedClass : ''\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\tbsStyle={selected === opt.value ? 'primary' : 'default'}\n\t\t\t\t\t>\n\t\t\t\t\t\t{opt.label}\n\t\t\t\t\t</Button>\n\t\t\t\t))}\n\t\t\t</ButtonGroup>\n\t\t)\n\t}\n}\n\nToggleButton.propTypes = {\n\tselectedClass: PropTypes.string,\n\tselected: PropTypes.any,\n\tonChange: PropTypes.func,\n\toptions: PropTypes.array\n}\n\nconst colourStyles = {\n\tcontrol: styles => ({\n\t\t...styles,\n\t\tbackgroundColor: 'white',\n\t\tpaddingLeft: 0,\n\t\tboxShadow: 'none',\n\t\t'&:hover': { borderColor: '#f68b1e' },\n\t\tborder: '1px solid transparent'\n\t}),\n\tindicatorSeparator: styles => ({\n\t\t...styles,\n\t\twidth: 0\n\t}),\n\tmenuContainerStyle: styles => ({\n\t\t...styles,\n\n\t\tzIndex: 50005\n\t}),\n\tmenu: styles => ({\n\t\t...styles,\n\t\tzIndex: 101\n\t})\n}\n\nclass SelectInput extends React.PureComponent {\n\temptyFunction = () => {}\n\n\trender() {\n\t\tconst { placeholder, value, onChange, options } = this.props\n\t\treturn (\n\t\t\t<Select\n\t\t\t\tclassName={'form__input form__select'}\n\t\t\t\tname=\"color\"\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={onChange || this.emptyFunction}\n\t\t\t\toptions={options}\n\t\t\t\tstyles={colourStyles}\n\t\t\t/>\n\t\t)\n\t}\n}\n\nSelectInput.propTypes = {\n\tplaceholder: PropTypes.string,\n\tvalue: PropTypes.any,\n\tonChange: PropTypes.func,\n\toptions: PropTypes.array\n}\n\nexport default {\n\tGroup: FormGroup,\n\tText: TextInput,\n\tSelect: SelectInput,\n\tToggle: ToggleButton\n}\n"]},"metadata":{},"sourceType":"module"}