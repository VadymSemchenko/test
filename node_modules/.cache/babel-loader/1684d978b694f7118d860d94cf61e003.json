{"ast":null,"code":"import _regeneratorRuntime from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport axios from 'axios';\nimport MockAdapter from 'axios-mock-adapter';\nimport humps from 'humps';\nimport { LOCAL_ACCESS_TOKEN_KEY } from '../enums';\nimport store from '../store';\nimport { logoutUser, renewToken } from '../store/auth/actions';\nimport createUserMockReponse from './mocks/create_user';\nimport { list, newOne } from './mocks/fetch_objects';\nimport { newService, policiesList } from './mocks/fetch_policies';\nimport fulfillUserMockResponse from './mocks/fulfill_user';\nimport readUserMockReponse from './mocks/read_user';\nexport var auth = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\nexport var rest = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  transformResponse: [].concat(_toConsumableArray(axios.defaults.transformResponse), [function (data) {\n    return humps.camelizeKeys(data);\n  }])\n});\nrest.interceptors.request.use(function (config) {\n  var token = localStorage.getItem(LOCAL_ACCESS_TOKEN_KEY);\n\n  if (token === null) {\n    store.dispatch(logoutUser());\n    return config;\n  }\n\n  config.headers.Authorization = \"Bearer \".concat(token);\n  return config;\n}, function (err) {\n  return Promise.reject(err);\n});\nrest.interceptors.response.use(function (response) {\n  store.dispatch(renewToken());\n  return response;\n}, function (error) {\n  if (error.status === 401) {\n    localStorage.removeItem(LOCAL_ACCESS_TOKEN_KEY);\n    store.dispatch(logoutUser());\n  }\n\n  return Promise.reject(error);\n});\n\nif (process.env.REACT_APP_ENABLE_MOCK === true) {\n  var restMock = new MockAdapter(rest, {\n    delayResponse: 300\n  });\n  restMock.onGet('/ecosystems/00790f55-a0a5-f4a4-6041-f291324f89a1/objects').reply(200, list).onGet('/ecosystems/d8a3f3eb-9aa4-0f10-49fc-717792090847/policies').reply(200, policiesList).onPost('/ecosystems/e6960bd4-2275-4d55-a1e7-a9101e79ba36/policies').reply(200, {}).onPost('/ecosystems/e6960bd4-2275-4d55-a1e7-a9101e79ba36/services').reply(201, newService).onPost('/ecosystems/e6960bd4-2275-4d55-a1e7-a9101e79ba36/objects').reply(201, newOne).onPut('/ecosystems/e6960bd4-2275-4d55-a1e7-a9101e79ba36/objects/2ewsvw234ewrdsf').reply(400).onGet(new RegExp('/v2/users/*')).reply(readUserMockReponse).onPut(new RegExp('/v2/users/*')).reply(fulfillUserMockResponse).onAny().passThrough();\n  var authMock = new MockAdapter(auth, {\n    delayResponse: 300\n  });\n  authMock.onPost(\"v2/users\").reply(createUserMockReponse);\n}\n\nexport function fetchEcosystems(_ref) {\n  var customer = _ref.customer;\n  return rest.get(\"/v2/customers/\".concat(customer, \"/ecosystems\")).then(function (response) {\n    return response.data;\n  });\n}\nexport function createEcosystem(_ref2) {\n  var customer = _ref2.customer,\n      entity = _ref2.entity;\n  return rest.post(\"/v2/customers/\".concat(customer, \"/ecosystems\"), {\n    name: entity.name,\n    nsps: ['EWR1']\n  }).then(function (response) {\n    return response.data;\n  });\n}\nexport function fetchObjects(_ref3) {\n  var ecosystem = _ref3.ecosystem;\n  return rest.get(\"/ecosystems/\".concat(ecosystem.uuid, \"/objects\")).then(function (response) {\n    return response.data;\n  });\n}\nexport function fetchPolicies(_ref4) {\n  var ecosystem = _ref4.ecosystem;\n  return rest.get(\"/ecosystems/\".concat(ecosystem.uuid, \"/policies\")).then(function (response) {\n    return response.data;\n  });\n}\nexport function fetchGroups(_ref5) {\n  var customer = _ref5.customer,\n      ecosystem = _ref5.ecosystem;\n  return rest.get(\"/v2/customers/\".concat(customer.id, \"/ecosystems/\").concat(ecosystem.uuid, \"/groups\")).then(function (response) {\n    return response.data;\n  });\n}\nexport function createGroup(_ref6) {\n  var customer = _ref6.customer,\n      ecosystem = _ref6.ecosystem,\n      name = _ref6.name;\n  return rest.post(\"/v2/customers/\".concat(customer.id, \"/ecosystems/\").concat(ecosystem.uuid, \"/groups\"), {\n    name: name\n  }).then(function (response) {\n    return response.data;\n  });\n}\nexport function createObject(object, type) {\n  return rest.post(getUrlForType(type), object).then(function (response) {\n    return response.data;\n  });\n}\nexport function updateObject(object) {\n  return rest.put(\"\".concat(getUrlForType(object.element), \"/\").concat(object.id), object);\n}\nexport function createService(service, ecosystem) {\n  return rest.post(\"/ecosystems/\".concat(ecosystem.uuid, \"/services\"), service).then(function (response) {\n    return response.data;\n  });\n}\nexport function createPolicy(policy, ecosystem) {\n  return rest.post(\"/ecosystems/\".concat(ecosystem.uuid, \"/policies\"), policy).then(function (response) {\n    return response.data;\n  });\n}\nexport function login(credentials) {\n  return auth.post(\"v2/auth/login\", credentials).then(function (response) {\n    return response.data;\n  });\n}\nexport function logout() {\n  return rest.post(\"/v2/auth/logout\", {}).then(function (response) {\n    return response.data;\n  });\n}\nexport function fetchReports(_x) {\n  return _fetchReports.apply(this, arguments);\n} // TODO: it's mocked\n\nfunction _fetchReports() {\n  _fetchReports = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref7) {\n    var query, ecosystem, customer, hits;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref7.query, ecosystem = _ref7.ecosystem, customer = _ref7.customer;\n            _context.next = 3;\n            return rest.post(\"/v2/customers/\".concat(customer, \"/ecosystems/\").concat(ecosystem, \"/logs/_search\"), query).then(function (response) {\n              return response.data.hits.hits;\n            });\n\n          case 3:\n            hits = _context.sent;\n            return _context.abrupt(\"return\", hits.map(function (report) {\n              return _objectSpread({}, report.source, {\n                id: report.id\n              });\n            }).map(function (report) {\n              return {\n                id: report.id,\n                date: report.eventDatetime,\n                policy: report.policyID,\n                source: report.sourceGeography,\n                service: {\n                  protocol: '',\n                  port: report.destinationPort,\n                  tcp: 'UDP',\n                  status: ''\n                },\n                application: '',\n                destination: report.destinationGeography,\n                actions: [report.eventAction],\n                alert: 'Threat',\n                status: 'active'\n              };\n            }));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _fetchReports.apply(this, arguments);\n}\n\nfunction getUrlForType(type) {\n  var ecosystem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'e6960bd4-2275-4d55-a1e7-a9101e79ba36';\n  return \"/ecosystems/\".concat(ecosystem, \"/objects\");\n}","map":{"version":3,"sources":["/Users/vadym/Documents/work/job/wedge/src/api/rest.js"],"names":["axios","MockAdapter","humps","LOCAL_ACCESS_TOKEN_KEY","store","logoutUser","renewToken","createUserMockReponse","list","newOne","newService","policiesList","fulfillUserMockResponse","readUserMockReponse","auth","create","baseURL","process","env","REACT_APP_API_URL","rest","transformResponse","defaults","data","camelizeKeys","interceptors","request","use","config","token","localStorage","getItem","dispatch","headers","Authorization","err","Promise","reject","response","error","status","removeItem","REACT_APP_ENABLE_MOCK","restMock","delayResponse","onGet","reply","onPost","onPut","RegExp","onAny","passThrough","authMock","fetchEcosystems","customer","get","then","createEcosystem","entity","post","name","nsps","fetchObjects","ecosystem","uuid","fetchPolicies","fetchGroups","id","createGroup","createObject","object","type","getUrlForType","updateObject","put","element","createService","service","createPolicy","policy","login","credentials","logout","fetchReports","query","hits","map","report","source","date","eventDatetime","policyID","sourceGeography","protocol","port","destinationPort","tcp","application","destination","destinationGeography","actions","eventAction","alert"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport MockAdapter from 'axios-mock-adapter'\nimport humps from 'humps'\nimport { LOCAL_ACCESS_TOKEN_KEY } from '../enums'\nimport store from '../store'\nimport { logoutUser, renewToken } from '../store/auth/actions'\nimport createUserMockReponse from './mocks/create_user'\nimport { list, newOne } from './mocks/fetch_objects'\nimport { newService, policiesList } from './mocks/fetch_policies'\nimport fulfillUserMockResponse from './mocks/fulfill_user'\nimport readUserMockReponse from './mocks/read_user'\n\nexport const auth = axios.create({\n\tbaseURL: process.env.REACT_APP_API_URL\n})\n\nexport const rest = axios.create({\n\tbaseURL: process.env.REACT_APP_API_URL,\n\ttransformResponse: [\n\t\t...axios.defaults.transformResponse,\n\t\tdata => humps.camelizeKeys(data)\n\t]\n})\n\nrest.interceptors.request.use(\n\tconfig => {\n\t\tconst token = localStorage.getItem(LOCAL_ACCESS_TOKEN_KEY)\n\n\t\tif (token === null) {\n\t\t\tstore.dispatch(logoutUser())\n\t\t\treturn config\n\t\t}\n\t\tconfig.headers.Authorization = `Bearer ${token}`\n\n\t\treturn config\n\t},\n\terr => Promise.reject(err)\n)\n\nrest.interceptors.response.use(\n\tresponse => {\n\t\tstore.dispatch(renewToken())\n\t\treturn response\n\t},\n\terror => {\n\t\tif (error.status === 401) {\n\t\t\tlocalStorage.removeItem(LOCAL_ACCESS_TOKEN_KEY)\n\t\t\tstore.dispatch(logoutUser())\n\t\t}\n\t\treturn Promise.reject(error)\n\t}\n)\n\nif (process.env.REACT_APP_ENABLE_MOCK === true) {\n\tconst restMock = new MockAdapter(rest, { delayResponse: 300 })\n\trestMock\n\t\t.onGet('/ecosystems/00790f55-a0a5-f4a4-6041-f291324f89a1/objects')\n\t\t.reply(200, list)\n\t\t.onGet('/ecosystems/d8a3f3eb-9aa4-0f10-49fc-717792090847/policies')\n\t\t.reply(200, policiesList)\n\t\t.onPost('/ecosystems/e6960bd4-2275-4d55-a1e7-a9101e79ba36/policies')\n\t\t.reply(200, {})\n\t\t.onPost('/ecosystems/e6960bd4-2275-4d55-a1e7-a9101e79ba36/services')\n\t\t.reply(201, newService)\n\t\t.onPost('/ecosystems/e6960bd4-2275-4d55-a1e7-a9101e79ba36/objects')\n\t\t.reply(201, newOne)\n\t\t.onPut(\n\t\t\t'/ecosystems/e6960bd4-2275-4d55-a1e7-a9101e79ba36/objects/2ewsvw234ewrdsf'\n\t\t)\n\t\t.reply(400)\n\t\t.onGet(new RegExp('/v2/users/*'))\n\t\t.reply(readUserMockReponse)\n\t\t.onPut(new RegExp('/v2/users/*'))\n\t\t.reply(fulfillUserMockResponse)\n\t\t.onAny()\n\t\t.passThrough()\n\n\tconst authMock = new MockAdapter(auth, { delayResponse: 300 })\n\tauthMock.onPost(`v2/users`).reply(createUserMockReponse)\n}\n\nexport function fetchEcosystems({ customer }) {\n\treturn rest\n\t\t.get(`/v2/customers/${customer}/ecosystems`)\n\t\t.then(response => response.data)\n}\n\nexport function createEcosystem({ customer, entity }) {\n\treturn rest\n\t\t.post(`/v2/customers/${customer}/ecosystems`, {\n\t\t\tname: entity.name,\n\t\t\tnsps: ['EWR1']\n\t\t})\n\t\t.then(response => response.data)\n}\n\nexport function fetchObjects({ ecosystem }) {\n\treturn rest\n\t\t.get(`/ecosystems/${ecosystem.uuid}/objects`)\n\t\t.then(response => response.data)\n}\n\nexport function fetchPolicies({ ecosystem }) {\n\treturn rest\n\t\t.get(`/ecosystems/${ecosystem.uuid}/policies`)\n\t\t.then(response => response.data)\n}\n\nexport function fetchGroups({ customer, ecosystem }) {\n\treturn rest\n\t\t.get(`/v2/customers/${customer.id}/ecosystems/${ecosystem.uuid}/groups`)\n\t\t.then(response => response.data)\n}\n\nexport function createGroup({ customer, ecosystem, name }) {\n\treturn rest\n\t\t.post(`/v2/customers/${customer.id}/ecosystems/${ecosystem.uuid}/groups`, {\n\t\t\tname\n\t\t})\n\t\t.then(response => response.data)\n}\n\nexport function createObject(object, type) {\n\treturn rest.post(getUrlForType(type), object).then(response => response.data)\n}\n\nexport function updateObject(object) {\n\treturn rest.put(`${getUrlForType(object.element)}/${object.id}`, object)\n}\n\nexport function createService(service, ecosystem) {\n\treturn rest\n\t\t.post(`/ecosystems/${ecosystem.uuid}/services`, service)\n\t\t.then(response => response.data)\n}\n\nexport function createPolicy(policy, ecosystem) {\n\treturn rest\n\t\t.post(`/ecosystems/${ecosystem.uuid}/policies`, policy)\n\t\t.then(response => response.data)\n}\n\nexport function login(credentials) {\n\treturn auth.post(`v2/auth/login`, credentials).then(response => response.data)\n}\n\nexport function logout() {\n\treturn rest.post(`/v2/auth/logout`, {}).then(response => response.data)\n}\n\nexport async function fetchReports({ query, ecosystem, customer }) {\n\tconst hits = await rest\n\t\t.post(\n\t\t\t`/v2/customers/${customer}/ecosystems/${ecosystem}/logs/_search`,\n\t\t\tquery\n\t\t)\n\t\t.then(response => {\n\t\t\treturn response.data.hits.hits\n\t\t})\n\treturn hits\n\t\t.map(report => ({ ...report.source, id: report.id }))\n\t\t.map(report => {\n\t\t\treturn {\n\t\t\t\tid: report.id,\n\t\t\t\tdate: report.eventDatetime,\n\t\t\t\tpolicy: report.policyID,\n\t\t\t\tsource: report.sourceGeography,\n\t\t\t\tservice: {\n\t\t\t\t\tprotocol: '',\n\t\t\t\t\tport: report.destinationPort,\n\t\t\t\t\ttcp: 'UDP',\n\t\t\t\t\tstatus: ''\n\t\t\t\t},\n\t\t\t\tapplication: '',\n\t\t\t\tdestination: report.destinationGeography,\n\t\t\t\tactions: [report.eventAction],\n\t\t\t\talert: 'Threat',\n\t\t\t\tstatus: 'active'\n\t\t\t}\n\t\t})\n}\n\n// TODO: it's mocked\nfunction getUrlForType(\n\ttype,\n\tecosystem = 'e6960bd4-2275-4d55-a1e7-a9101e79ba36'\n) {\n\treturn `/ecosystems/${ecosystem}/objects`\n}\n"]},"metadata":{},"sourceType":"module"}