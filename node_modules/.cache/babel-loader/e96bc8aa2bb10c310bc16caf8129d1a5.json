{"ast":null,"code":"import _classCallCheck from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vadym/Documents/work/job/wedge/src/App.js\";\nimport React from 'react';\nimport { Route, Router, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { injectStripe } from 'react-stripe-elements';\nimport { compose } from 'recompose';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ProtectedRoute from './components/ProtectedRoute/ProtectedRoute';\nimport history from './history';\nimport Dashboard from './layouts/Dashboard/Dashboard';\nimport Ecosystems from './layouts/Ecosystems/Ecosystems';\nimport Login from './layouts/Login/Login';\nimport './reset.scss';\nimport { startup as _startup } from './store/common-scenario-actions';\nimport { setStripe as _setStripe } from './store/payment/actions';\nimport { connect } from 'react-redux';\nimport { func, bool } from 'prop-types';\nimport GlobalLoader from './components/GlobalLoader/GlobalLoader';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          startup = _this$props.startup,\n          setStripe = _this$props.setStripe;\n      startup();\n      setStripe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var startupFinished = this.props.startupFinished;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, startupFinished ? React.createElement(Router, {\n        history: history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(ProtectedRoute, {\n        path: '/',\n        exact: true,\n        component: Ecosystems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(ProtectedRoute, {\n        path: '/ecosystems',\n        component: Dashboard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: '/auth',\n        component: Login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }))) : React.createElement(GlobalLoader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(ToastContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nApp.propTypes = {\n  startup: func.isRequired,\n  startupFinished: bool.isRequired,\n  setStripe: func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    startupFinished: state.global.startupFinished\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, _ref) {\n  var stripe = _ref.stripe;\n  return {\n    startup: function startup() {\n      return dispatch(_startup());\n    },\n    setStripe: function setStripe() {\n      return dispatch(_setStripe(stripe));\n    }\n  };\n};\n\nexport default compose(injectStripe, connect(mapStateToProps, mapDispatchToProps))(App);","map":{"version":3,"sources":["/Users/vadym/Documents/work/job/wedge/src/App.js"],"names":["React","Route","Router","Switch","ToastContainer","injectStripe","compose","ProtectedRoute","history","Dashboard","Ecosystems","Login","startup","setStripe","connect","func","bool","GlobalLoader","App","props","startupFinished","Component","propTypes","isRequired","mapStateToProps","state","global","mapDispatchToProps","dispatch","stripe"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,QAAsC,kBAAtC;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,uCAAP;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAO,cAAP;AACA,SAASC,OAAO,IAAPA,QAAT,QAAwB,iCAAxB;AACA,SAASC,SAAS,IAATA,UAAT,QAA0B,yBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,YAA3B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;;IAEMC,G;;;;;;;;;;;;;wCACe;AAAA,wBACY,KAAKC,KADjB;AAAA,UACXP,OADW,eACXA,OADW;AAAA,UACFC,SADE,eACFA,SADE;AAEnBD,MAAAA,OAAO;AACPC,MAAAA,SAAS;AACT;;;6BAEQ;AAAA,UACAO,eADA,GACoB,KAAKD,KADzB,CACAC,eADA;AAER,aACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEA,eAAe,GACf,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAEZ,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,GAAtB;AAA2B,QAAA,KAAK,MAAhC;AAAiC,QAAA,SAAS,EAAEE,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,aAAtB;AAAqC,QAAA,SAAS,EAAED,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,EAGC,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,OAAb;AAAsB,QAAA,SAAS,EAAEE,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,CADD,CADe,GASf,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAYC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZD,CADD;AAgBA;;;;EAzBgBX,KAAK,CAACqB,S;;AA4BxBH,GAAG,CAACI,SAAJ,GAAgB;AACfV,EAAAA,OAAO,EAAEG,IAAI,CAACQ,UADC;AAEfH,EAAAA,eAAe,EAAEJ,IAAI,CAACO,UAFP;AAGfV,EAAAA,SAAS,EAAEE,IAAI,CAACQ;AAHD,CAAhB;;AAMA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAChC,SAAO;AACNL,IAAAA,eAAe,EAAEK,KAAK,CAACC,MAAN,CAAaN;AADxB,GAAP;AAGA,CAJD;;AAMA,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,QAA0B;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACpD,SAAO;AACNjB,IAAAA,OAAO,EAAE;AAAA,aAAMgB,QAAQ,CAAChB,QAAO,EAAR,CAAd;AAAA,KADH;AAENC,IAAAA,SAAS,EAAE;AAAA,aAAMe,QAAQ,CAACf,UAAS,CAACgB,MAAD,CAAV,CAAd;AAAA;AAFL,GAAP;AAIA,CALD;;AAOA,eAAevB,OAAO,CACrBD,YADqB,EAErBS,OAAO,CACNU,eADM,EAENG,kBAFM,CAFc,CAAP,CAMbT,GANa,CAAf","sourcesContent":["import React from 'react'\nimport { Route, Router, Switch } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\nimport { injectStripe } from 'react-stripe-elements'\nimport { compose } from 'recompose'\n\nimport 'react-toastify/dist/ReactToastify.css'\nimport ProtectedRoute from './components/ProtectedRoute/ProtectedRoute'\nimport history from './history'\nimport Dashboard from './layouts/Dashboard/Dashboard'\nimport Ecosystems from './layouts/Ecosystems/Ecosystems'\nimport Login from './layouts/Login/Login'\nimport './reset.scss'\nimport { startup } from './store/common-scenario-actions'\nimport { setStripe } from './store/payment/actions'\nimport { connect } from 'react-redux'\nimport { func, bool } from 'prop-types'\nimport GlobalLoader from './components/GlobalLoader/GlobalLoader'\n\nclass App extends React.Component {\n\tcomponentDidMount() {\n\t\tconst { startup, setStripe } = this.props\n\t\tstartup()\n\t\tsetStripe()\n\t}\n\n\trender() {\n\t\tconst { startupFinished } = this.props\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{startupFinished ? (\n\t\t\t\t\t<Router history={history}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<ProtectedRoute path={'/'} exact component={Ecosystems} />\n\t\t\t\t\t\t\t<ProtectedRoute path={'/ecosystems'} component={Dashboard} />\n\t\t\t\t\t\t\t<Route path={'/auth'} component={Login} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Router>\n\t\t\t\t) : (\n\t\t\t\t\t<GlobalLoader />\n\t\t\t\t)}\n\t\t\t\t<ToastContainer />\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nApp.propTypes = {\n\tstartup: func.isRequired,\n\tstartupFinished: bool.isRequired,\n\tsetStripe: func.isRequired\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tstartupFinished: state.global.startupFinished\n\t}\n}\n\nconst mapDispatchToProps = (dispatch, { stripe }) => {\n\treturn {\n\t\tstartup: () => dispatch(startup()),\n\t\tsetStripe: () => dispatch(setStripe(stripe))\n\t}\n}\n\nexport default compose(\n\tinjectStripe,\n\tconnect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps\n\t)\n)(App)\n"]},"metadata":{},"sourceType":"module"}