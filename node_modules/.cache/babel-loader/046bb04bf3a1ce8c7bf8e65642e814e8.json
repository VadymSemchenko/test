{"ast":null,"code":"import _defineProperty from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar errorReducer = function errorReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n  var matches = /(.*)_(REQUEST|FAILURE)/.exec(type); // not a *_REQUEST / *_FAILURE actions, so we ignore them\n\n  if (!matches) return state;\n\n  var _matches = _slicedToArray(matches, 3),\n      requestName = _matches[1],\n      requestState = _matches[2];\n\n  return _objectSpread({}, state, _defineProperty({}, requestName, requestState === 'FAILURE' ? payload.message : ''));\n};\n\nexport default errorReducer;","map":{"version":3,"sources":["/Users/vadym/Documents/work/job/wedge/src/store/errors/reducer.js"],"names":["errorReducer","state","action","type","payload","matches","exec","requestName","requestState","message"],"mappings":";;;;AAAA,IAAMA,YAAY,GAAG,SAAfA,YAAe,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AAAA,MACpCC,IADoC,GAClBD,MADkB,CACpCC,IADoC;AAAA,MAC9BC,OAD8B,GAClBF,MADkB,CAC9BE,OAD8B;AAE5C,MAAMC,OAAO,GAAG,yBAAyBC,IAAzB,CAA8BH,IAA9B,CAAhB,CAF4C,CAI5C;;AACA,MAAI,CAACE,OAAL,EAAc,OAAOJ,KAAP;;AAL8B,gCAONI,OAPM;AAAA,MAOnCE,WAPmC;AAAA,MAOtBC,YAPsB;;AAQ5C,2BACIP,KADJ,sBAKEM,WALF,EAKgBC,YAAY,KAAK,SAAjB,GAA6BJ,OAAO,CAACK,OAArC,GAA+C,EAL/D;AAOA,CAfD;;AAiBA,eAAeT,YAAf","sourcesContent":["const errorReducer = (state = {}, action) => {\n\tconst { type, payload } = action\n\tconst matches = /(.*)_(REQUEST|FAILURE)/.exec(type)\n\n\t// not a *_REQUEST / *_FAILURE actions, so we ignore them\n\tif (!matches) return state\n\n\tconst [, requestName, requestState] = matches\n\treturn {\n\t\t...state,\n\t\t// Store errorMessage\n\t\t// e.g. stores errorMessage when receiving GET_TODOS_FAILURE\n\t\t//      else clear errorMessage when receiving GET_TODOS_REQUEST\n\t\t[requestName]: requestState === 'FAILURE' ? payload.message : ''\n\t}\n}\n\nexport default errorReducer\n"]},"metadata":{},"sourceType":"module"}