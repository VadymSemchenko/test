{"ast":null,"code":"import _defineProperty from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vadym/Documents/work/job/wedge/src/views/Modals/NewDeviceSurvey.jsx\";\nimport 'leaflet/dist/leaflet.css';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Map, TileLayer } from 'react-leaflet';\nimport Card from '../../components/Card/Card';\nimport Form from '../../components/Form/Form';\nimport { connect } from 'react-redux';\nimport populator from '../../utils/populator';\nimport { AVAILABLE_REGIONS, EXPIRATION_TYPE, EXPIRATION_TYPE_OPTIONS, LOCATION_TYPE, LOCATION_TYPE_OPTIONS, OBJECT_ASSET_VALUES, OBJECT_CATEGORIES, OBJECT_TYPES } from '../../enums';\nimport Translator from '../../utils/enumTranslator';\nimport { Footer } from './commons';\nimport './modals.scss';\nimport SelectWithCreate from '../../components/SelectWithCreate/SelectWithCreate';\nimport { createGroup as _createGroup } from '../../store/creational-scenario-actions';\n\nvar NewDeviceSurvey =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewDeviceSurvey, _React$Component);\n\n  function NewDeviceSurvey(props) {\n    var _this;\n\n    _classCallCheck(this, NewDeviceSurvey);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewDeviceSurvey).call(this, props));\n\n    _this.changeField = function (field, value) {\n      _this.setState(_defineProperty({}, field, value));\n    };\n\n    _this.handleGroupCreate = function (name) {\n      _this.props.createGroup(name);\n    };\n\n    _this.onNameChange = function (val) {\n      return _this.changeField('name', val);\n    };\n\n    _this.onProfileChange = function (val) {\n      return _this.changeField('profile', val);\n    };\n\n    _this.onCategoryChange = function (val) {\n      return _this.changeField('category', val);\n    };\n\n    _this.onTypeChange = function (val) {\n      return _this.changeField('type', val);\n    };\n\n    _this.onAssetChange = function (val) {\n      return _this.changeField('asset', val);\n    };\n\n    _this.onExpiryChange = function (val) {\n      return _this.changeField('expiry', val);\n    };\n\n    _this.onDescriptionChange = function (val) {\n      return _this.changeField('description', val);\n    };\n\n    _this.onLocationChange = function (val) {\n      return _this.changeField('location', val);\n    };\n\n    _this.onLatChange = function (val) {\n      return _this.changeField('lat', val);\n    };\n\n    _this.onLongChange = function (val) {\n      return _this.changeField('long', val);\n    };\n\n    _this.onExpiryTypeChange = function (val) {\n      return _this.changeField('expiryType', val);\n    };\n\n    _this.onRegionChange = function (val) {\n      return _this.changeField('region', val);\n    };\n\n    _this.onFinish = function () {\n      if (_this.validate()) {\n        _this.props.onFinish(_this.state);\n      }\n    };\n\n    if (props.edit) {\n      _this.state = {\n        name: props.item.name,\n        expiryType: props.item.expiry.type,\n        expiry: props.item.expiry.date,\n        category: Translator.category(props.item.category),\n        type: Translator.type(props.item.type),\n        asset: OBJECT_ASSET_VALUES[props.item.assetValue],\n        // NOT SAFE, TODO LATED\n        location: Translator.location(props.item.location.type),\n        profile: props.groups.find(function (gr) {\n          return gr.uuid === props.item.profile;\n        }),\n        lat: props.item.location.latitude,\n        long: props.item.location.longitude,\n        region: Translator.region(props.item.location.region),\n        description: props.item.description\n      };\n    } else {\n      _this.state = {\n        expiryType: EXPIRATION_TYPE.HARD,\n        location: LOCATION_TYPE_OPTIONS[LOCATION_TYPE.AUTO]\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(NewDeviceSurvey, [{\n    key: \"validate\",\n    value: function validate() {\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'modal__content padded new-device-survey',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Card, {\n        header: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'form-row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        label: 'Name',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.name,\n        onChange: this.onNameChange,\n        placeholder: 'Name',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        label: 'Profile Group',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(SelectWithCreate, {\n        onCreate: this.handleGroupCreate,\n        selected: this.state.profile,\n        onChange: this.onProfileChange,\n        placeholder: 'Select profile group',\n        createOpened: false,\n        options: this.props.groups.map(populator.group),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: 'form-row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        label: 'Category',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Form.Select, {\n        value: this.state.category,\n        onChange: this.onCategoryChange,\n        placeholder: 'Select category',\n        options: OBJECT_CATEGORIES,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        label: 'Type',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Form.Select, {\n        value: this.state.type,\n        onChange: this.onTypeChange,\n        placeholder: 'Select type',\n        options: OBJECT_TYPES,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }))), React.createElement(Form.Group, {\n        label: 'Asset value',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Form.Select, {\n        value: this.state.asset,\n        onChange: this.onAssetChange,\n        placeholder: 'Select asset value',\n        options: OBJECT_ASSET_VALUES,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: 'form-row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        label: 'Expiry',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.expiry,\n        onChange: this.onExpiryChange,\n        placeholder: 'Expiry',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        center: true,\n        label: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Form.Toggle, {\n        selected: this.state.expiryType,\n        selectedClass: 'toggle-selected',\n        onChange: this.onExpiryTypeChange,\n        options: EXPIRATION_TYPE_OPTIONS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })))), React.createElement(Card, {\n        header: false,\n        className: 'component-coming-soon',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        full: true,\n        label: 'Description',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.description,\n        onChange: this.onDescriptionChange,\n        placeholder: 'Device description',\n        multiline: true,\n        rows: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        label: 'Location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Form.Select, {\n        value: this.state.location,\n        onChange: this.onLocationChange,\n        placeholder: 'Select location value',\n        options: LOCATION_TYPE_OPTIONS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: 'form-row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, this.state.location.value === LOCATION_TYPE.REGION && React.createElement(Form.Group, {\n        label: 'Region',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Form.Select, {\n        value: this.state.region,\n        onChange: this.onRegionChange,\n        placeholder: 'Select region',\n        options: AVAILABLE_REGIONS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })), this.state.location.value === LOCATION_TYPE.COORDINATES && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        label: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.lat,\n        onChange: this.onLatChange,\n        placeholder: 'Latitude',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        label: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Form.Text, {\n        value: this.state.long,\n        onChange: this.onLongChange,\n        placeholder: 'Longitude',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })))), React.createElement(Map, {\n        style: {\n          height: '300px',\n          width: '100%'\n        },\n        center: [51.505, -0.09],\n        zoom: 13,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: 'wedge-modal__footer',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Footer, {\n        onClick: this.onFinish,\n        edit: this.props.edit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return NewDeviceSurvey;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    groups: state.ecosystems.dictionaries.groups\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createGroup: function createGroup(name) {\n      return dispatch(_createGroup(name));\n    }\n  };\n};\n\nNewDeviceSurvey.defaultProps = {\n  edit: false,\n  groups: []\n};\nNewDeviceSurvey.propTypes = {\n  onFinish: PropTypes.func.isRequired,\n  edit: PropTypes.bool,\n  item: PropTypes.object,\n  groups: PropTypes.arrayOf(PropTypes.shape({\n    uuid: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n  })),\n  createGroup: PropTypes.func.isRequired\n};\nNewDeviceSurvey.Footer = Footer;\nexport default connect(mapStateToProps, mapDispatchToProps)(NewDeviceSurvey);","map":{"version":3,"sources":["/Users/vadym/Documents/work/job/wedge/src/views/Modals/NewDeviceSurvey.jsx"],"names":["PropTypes","React","Map","TileLayer","Card","Form","connect","populator","AVAILABLE_REGIONS","EXPIRATION_TYPE","EXPIRATION_TYPE_OPTIONS","LOCATION_TYPE","LOCATION_TYPE_OPTIONS","OBJECT_ASSET_VALUES","OBJECT_CATEGORIES","OBJECT_TYPES","Translator","Footer","SelectWithCreate","createGroup","NewDeviceSurvey","props","changeField","field","value","setState","handleGroupCreate","name","onNameChange","val","onProfileChange","onCategoryChange","onTypeChange","onAssetChange","onExpiryChange","onDescriptionChange","onLocationChange","onLatChange","onLongChange","onExpiryTypeChange","onRegionChange","onFinish","validate","state","edit","item","expiryType","expiry","type","date","category","asset","assetValue","location","profile","groups","find","gr","uuid","lat","latitude","long","longitude","region","description","HARD","AUTO","map","group","REGION","COORDINATES","height","width","Component","mapStateToProps","ecosystems","dictionaries","mapDispatchToProps","dispatch","defaultProps","propTypes","func","isRequired","bool","object","arrayOf","shape","string"],"mappings":"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","sourcesContent":["import 'leaflet/dist/leaflet.css'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { Map, TileLayer } from 'react-leaflet'\nimport Card from '../../components/Card/Card'\nimport Form from '../../components/Form/Form'\nimport { connect } from 'react-redux'\nimport populator from '../../utils/populator'\nimport {\n\tAVAILABLE_REGIONS,\n\tEXPIRATION_TYPE,\n\tEXPIRATION_TYPE_OPTIONS,\n\tLOCATION_TYPE,\n\tLOCATION_TYPE_OPTIONS,\n\tOBJECT_ASSET_VALUES,\n\tOBJECT_CATEGORIES,\n\tOBJECT_TYPES\n} from '../../enums'\nimport Translator from '../../utils/enumTranslator'\nimport { Footer } from './commons'\nimport './modals.scss'\nimport SelectWithCreate from '../../components/SelectWithCreate/SelectWithCreate'\nimport { createGroup } from '../../store/creational-scenario-actions'\n\nclass NewDeviceSurvey extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tif (props.edit) {\n\t\t\tthis.state = {\n\t\t\t\tname: props.item.name,\n\t\t\t\texpiryType: props.item.expiry.type,\n\t\t\t\texpiry: props.item.expiry.date,\n\t\t\t\tcategory: Translator.category(props.item.category),\n\t\t\t\ttype: Translator.type(props.item.type),\n\t\t\t\tasset: OBJECT_ASSET_VALUES[props.item.assetValue], // NOT SAFE, TODO LATED\n\t\t\t\tlocation: Translator.location(props.item.location.type),\n\t\t\t\tprofile: props.groups.find(gr => gr.uuid === props.item.profile),\n\t\t\t\tlat: props.item.location.latitude,\n\t\t\t\tlong: props.item.location.longitude,\n\t\t\t\tregion: Translator.region(props.item.location.region),\n\t\t\t\tdescription: props.item.description\n\t\t\t}\n\t\t} else {\n\t\t\tthis.state = {\n\t\t\t\texpiryType: EXPIRATION_TYPE.HARD,\n\t\t\t\tlocation: LOCATION_TYPE_OPTIONS[LOCATION_TYPE.AUTO]\n\t\t\t}\n\t\t}\n\t}\n\n\tchangeField = (field, value) => {\n\t\tthis.setState({\n\t\t\t[field]: value\n\t\t})\n\t}\n\n\thandleGroupCreate = name => {\n\t\tthis.props.createGroup(name)\n\t}\n\n\tonNameChange = val => this.changeField('name', val)\n\tonProfileChange = val => this.changeField('profile', val)\n\tonCategoryChange = val => this.changeField('category', val)\n\tonTypeChange = val => this.changeField('type', val)\n\tonAssetChange = val => this.changeField('asset', val)\n\tonExpiryChange = val => this.changeField('expiry', val)\n\tonDescriptionChange = val => this.changeField('description', val)\n\tonLocationChange = val => this.changeField('location', val)\n\tonLatChange = val => this.changeField('lat', val)\n\tonLongChange = val => this.changeField('long', val)\n\tonExpiryTypeChange = val => this.changeField('expiryType', val)\n\tonRegionChange = val => this.changeField('region', val)\n\n\tonFinish = () => {\n\t\tif (this.validate()) {\n\t\t\tthis.props.onFinish(this.state)\n\t\t}\n\t}\n\n\tvalidate() {\n\t\treturn true\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className={'modal__content padded new-device-survey'}>\n\t\t\t\t\t<Card header={false}>\n\t\t\t\t\t\t<div className={'form-row'}>\n\t\t\t\t\t\t\t<Form.Group label={'Name'}>\n\t\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\t\t\tonChange={this.onNameChange}\n\t\t\t\t\t\t\t\t\tplaceholder={'Name'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t<Form.Group label={'Profile Group'}>\n\t\t\t\t\t\t\t\t<SelectWithCreate\n\t\t\t\t\t\t\t\t\tonCreate={this.handleGroupCreate}\n\t\t\t\t\t\t\t\t\tselected={this.state.profile}\n\t\t\t\t\t\t\t\t\tonChange={this.onProfileChange}\n\t\t\t\t\t\t\t\t\tplaceholder={'Select profile group'}\n\t\t\t\t\t\t\t\t\tcreateOpened={false}\n\t\t\t\t\t\t\t\t\toptions={this.props.groups.map(populator.group)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={'form-row'}>\n\t\t\t\t\t\t\t<Form.Group label={'Category'}>\n\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\tvalue={this.state.category}\n\t\t\t\t\t\t\t\t\tonChange={this.onCategoryChange}\n\t\t\t\t\t\t\t\t\tplaceholder={'Select category'}\n\t\t\t\t\t\t\t\t\toptions={OBJECT_CATEGORIES}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t<Form.Group label={'Type'}>\n\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\tvalue={this.state.type}\n\t\t\t\t\t\t\t\t\tonChange={this.onTypeChange}\n\t\t\t\t\t\t\t\t\tplaceholder={'Select type'}\n\t\t\t\t\t\t\t\t\toptions={OBJECT_TYPES}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Form.Group label={'Asset value'}>\n\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\tvalue={this.state.asset}\n\t\t\t\t\t\t\t\tonChange={this.onAssetChange}\n\t\t\t\t\t\t\t\tplaceholder={'Select asset value'}\n\t\t\t\t\t\t\t\toptions={OBJECT_ASSET_VALUES}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<div className={'form-row'}>\n\t\t\t\t\t\t\t<Form.Group label={'Expiry'}>\n\t\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\t\tvalue={this.state.expiry}\n\t\t\t\t\t\t\t\t\tonChange={this.onExpiryChange}\n\t\t\t\t\t\t\t\t\tplaceholder={'Expiry'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t<Form.Group center={true} label={''}>\n\t\t\t\t\t\t\t\t<Form.Toggle\n\t\t\t\t\t\t\t\t\tselected={this.state.expiryType}\n\t\t\t\t\t\t\t\t\tselectedClass={'toggle-selected'}\n\t\t\t\t\t\t\t\t\tonChange={this.onExpiryTypeChange}\n\t\t\t\t\t\t\t\t\toptions={EXPIRATION_TYPE_OPTIONS}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Card header={false} className={'component-coming-soon'}>\n\t\t\t\t\t\t<Form.Group full={true} label={'Description'}>\n\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\t\t\t\tonChange={this.onDescriptionChange}\n\t\t\t\t\t\t\t\tplaceholder={'Device description'}\n\t\t\t\t\t\t\t\tmultiline={true}\n\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group label={'Location'}>\n\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\tvalue={this.state.location}\n\t\t\t\t\t\t\t\tonChange={this.onLocationChange}\n\t\t\t\t\t\t\t\tplaceholder={'Select location value'}\n\t\t\t\t\t\t\t\toptions={LOCATION_TYPE_OPTIONS}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<div className={'form-row'}>\n\t\t\t\t\t\t\t{this.state.location.value === LOCATION_TYPE.REGION && (\n\t\t\t\t\t\t\t\t<Form.Group label={'Region'}>\n\t\t\t\t\t\t\t\t\t<Form.Select\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.region}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onRegionChange}\n\t\t\t\t\t\t\t\t\t\tplaceholder={'Select region'}\n\t\t\t\t\t\t\t\t\t\toptions={AVAILABLE_REGIONS}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this.state.location.value === LOCATION_TYPE.COORDINATES && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Form.Group label={''}>\n\t\t\t\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.lat}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onLatChange}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={'Latitude'}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Group label={''}>\n\t\t\t\t\t\t\t\t\t\t<Form.Text\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.long}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onLongChange}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={'Longitude'}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<Map\n\t\t\t\t\t\t\tstyle={{ height: '300px', width: '100%' }}\n\t\t\t\t\t\t\tcenter={[51.505, -0.09]}\n\t\t\t\t\t\t\tzoom={13}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TileLayer\n\t\t\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Map>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t\t<div className={'wedge-modal__footer'}>\n\t\t\t\t\t<Footer onClick={this.onFinish} edit={this.props.edit} />\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tgroups: state.ecosystems.dictionaries.groups\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tcreateGroup: name => dispatch(createGroup(name))\n\t}\n}\n\nNewDeviceSurvey.defaultProps = {\n\tedit: false,\n\tgroups: []\n}\n\nNewDeviceSurvey.propTypes = {\n\tonFinish: PropTypes.func.isRequired,\n\tedit: PropTypes.bool,\n\titem: PropTypes.object,\n\tgroups: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tuuid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired\n\t\t})\n\t),\n\tcreateGroup: PropTypes.func.isRequired\n}\n\nNewDeviceSurvey.Footer = Footer\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(NewDeviceSurvey)\n"]},"metadata":{},"sourceType":"module"}