{"ast":null,"code":"import _classCallCheck from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vadym/Documents/work/job/wedge/src/views/SignUpForm/EmailConfirmation/EmailConfirmation.jsx\";\nimport Spinner from 'react-spinner-material';\nimport React, { Component } from 'react';\nimport { func, string, object } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport qs from 'query-string';\nimport ErrorPanel from '../../../components/ErrorPanel/ErrorPanel';\nimport { checkIfTheTokenIsValid } from '../scenario-actions';\nimport { clearError } from '../../../store/user/actions';\nimport { errorSelector, emailSelector } from '../../../store/user/selectors';\nimport '../sign-up-form.scss';\n\nvar EmailConfirmation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EmailConfirmation, _Component);\n\n  function EmailConfirmation(props) {\n    var _this;\n\n    _classCallCheck(this, EmailConfirmation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EmailConfirmation).call(this, props));\n\n    _this.handleErrorClose = function () {\n      var _this$props = _this.props,\n          clearError = _this$props.clearError,\n          history = _this$props.history;\n      clearError();\n      history.replace('auth/sign-up');\n    };\n\n    var search = props.location.search;\n\n    var _qs$parse = qs.parse(search),\n        token = _qs$parse.token,\n        username = _qs$parse.username;\n\n    console.log('TOKEN', token);\n    console.log('USERNAME', username);\n    _this.token = token;\n    _this.username = username;\n    _this.shouldCheckToken = _this.token && _this.username;\n    _this.error = _this.shouldCheckToken ? '' : 'Incorrect link';\n    return _this;\n  }\n\n  _createClass(EmailConfirmation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var checkIfTheTokenIsValid = this.props.checkIfTheTokenIsValid;\n\n      if (this.shouldCheckToken) {\n        checkIfTheTokenIsValid({\n          token: this.token,\n          username: this.username\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$props2 = this.props,\n          clearError = _this$props2.clearError,\n          error = _this$props2.error;\n      if (error) clearError();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var error = this.error || this.props.error;\n      return React.createElement(\"div\", {\n        className: \"form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, error ? React.createElement(ErrorPanel, {\n        message: error,\n        buttonClickHandler: this.handleErrorClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }) : React.createElement(Spinner, {\n        spinnerColor: \"#4986c5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EmailConfirmation;\n}(Component);\n\nEmailConfirmation.propTypes = {\n  error: string.isRequired,\n  clearError: func.isRequired,\n  email: string.isRequired,\n  checkIfTheTokenIsValid: func.isRequired,\n  location: object.isRequired,\n  history: object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    error: errorSelector(state),\n    email: emailSelector(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    clearError: clearError,\n    checkIfTheTokenIsValid: checkIfTheTokenIsValid\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmailConfirmation);","map":{"version":3,"sources":["/Users/vadym/Documents/work/job/wedge/src/views/SignUpForm/EmailConfirmation/EmailConfirmation.jsx"],"names":["Spinner","React","Component","func","string","object","connect","bindActionCreators","qs","ErrorPanel","checkIfTheTokenIsValid","clearError","errorSelector","emailSelector","EmailConfirmation","props","handleErrorClose","history","replace","search","location","parse","token","username","console","log","shouldCheckToken","error","propTypes","isRequired","email","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import Spinner from 'react-spinner-material'\nimport React, { Component } from 'react'\nimport { func, string, object } from 'prop-types'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport qs from 'query-string'\n\nimport ErrorPanel from '../../../components/ErrorPanel/ErrorPanel'\nimport { checkIfTheTokenIsValid } from '../scenario-actions'\nimport { clearError } from '../../../store/user/actions'\nimport { errorSelector, emailSelector } from '../../../store/user/selectors'\nimport '../sign-up-form.scss'\n\nclass EmailConfirmation extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tconst {\n\t\t\tlocation: { search }\n\t\t} = props\n\t\tconst { token, username } = qs.parse(search)\n\t\tconsole.log('TOKEN', token)\n\t\tconsole.log('USERNAME', username)\n\t\tthis.token = token\n\t\tthis.username = username\n\t\tthis.shouldCheckToken = this.token && this.username\n\t\tthis.error = this.shouldCheckToken ? '' : 'Incorrect link'\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { checkIfTheTokenIsValid } = this.props\n\t\tif (this.shouldCheckToken) {\n\t\t\tcheckIfTheTokenIsValid({ token: this.token, username: this.username })\n\t\t}\n\t}\n\n\thandleErrorClose = () => {\n\t\tconst { clearError, history } = this.props\n\t\tclearError()\n\t\thistory.replace('auth/sign-up')\n\t}\n\n\tcomponentWillUnmount() {\n\t\tconst { clearError, error } = this.props\n\t\tif (error) clearError()\n\t}\n\n\trender() {\n\t\tconst error = this.error || this.props.error\n\t\treturn (\n\t\t\t<div className=\"form-container\">\n\t\t\t\t{error ? (\n\t\t\t\t\t<ErrorPanel\n\t\t\t\t\t\tmessage={error}\n\t\t\t\t\t\tbuttonClickHandler={this.handleErrorClose}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<Spinner spinnerColor=\"#4986c5\" />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nEmailConfirmation.propTypes = {\n\terror: string.isRequired,\n\tclearError: func.isRequired,\n\temail: string.isRequired,\n\tcheckIfTheTokenIsValid: func.isRequired,\n\tlocation: object.isRequired,\n\thistory: object.isRequired\n}\n\nconst mapStateToProps = state => ({\n\terror: errorSelector(state),\n\temail: emailSelector(state)\n})\n\nconst mapDispatchToProps = dispatch =>\n\tbindActionCreators(\n\t\t{\n\t\t\tclearError,\n\t\t\tcheckIfTheTokenIsValid\n\t\t},\n\t\tdispatch\n\t)\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(EmailConfirmation)\n"]},"metadata":{},"sourceType":"module"}