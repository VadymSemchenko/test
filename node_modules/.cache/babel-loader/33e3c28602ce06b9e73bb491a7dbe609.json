{"ast":null,"code":"import moment from 'moment';\nimport { EXPIRATION_TYPE } from '../../enums';\nexport var policiesList = [{\n  id: '2ewsvw234ewrdsf',\n  // UUID\n  name: 'voCore-g2-42434234234',\n  // String\n  expiry: {\n    type: EXPIRATION_TYPE.SOFT,\n    // String or enum ID (need to define) [HARD, SOFT]\n    date: moment().toISOString() // Date time ISO-8601 or another one\n\n  },\n  source: 'pg-survivalience-21023',\n  destination: 'jarvix-121323-protocololasd',\n  threat_management: false,\n  services: [{\n    id: '123131231',\n    name: 'Service #1',\n    protocol: 'TCP',\n    port: 8080\n  }, {\n    id: '123131231',\n    name: 'Service #2',\n    protocol: 'TCP',\n    port: 389\n  }],\n  applications: [{\n    id: '123123131',\n    name: 'Application #1'\n  }, {\n    id: '123123132',\n    name: 'Application #2'\n  }],\n  description: 'Lorem ipsum' // Long string\n\n}, {\n  id: '2ewsvw234ewrdsdd',\n  // UUID\n  name: 'voCore-g2-4243423423rr',\n  // String\n  expiry: {\n    type: EXPIRATION_TYPE.SOFT,\n    // String or enum ID (need to define) [HARD, SOFT]\n    date: moment().toISOString() // Date time ISO-8601 or another one\n\n  },\n  source: 'pg-survivalience-21023',\n  destination: 'jarvix-121323-protocololasd',\n  threat_management: false,\n  services: [{\n    id: '123131231',\n    name: 'Service #1',\n    protocol: 'TCP',\n    port: 8080\n  }, {\n    id: '123131231',\n    name: 'Service #1',\n    protocol: 'HTTP',\n    port: 389\n  }],\n  applications: [{\n    id: '123123131',\n    name: 'Application #1'\n  }, {\n    id: '123123132',\n    name: 'Application #2'\n  }],\n  description: 'Lorem ipsum' // Long string\n\n}];\nexport var newService = {\n  id: Math.floor(Math.random() * 1000),\n  name: \"TEST\",\n  protocol: 'FTP',\n  port: Math.floor(Math.random() * 65000)\n};","map":{"version":3,"sources":["/Users/vadym/Documents/work/job/wedge/src/api/mocks/fetch_policies.js"],"names":["moment","EXPIRATION_TYPE","policiesList","id","name","expiry","type","SOFT","date","toISOString","source","destination","threat_management","services","protocol","port","applications","description","newService","Math","floor","random"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,eAAT,QAAgC,aAAhC;AAEA,OAAO,IAAMC,YAAY,GAAG,CAC3B;AACCC,EAAAA,EAAE,EAAE,iBADL;AACwB;AACvBC,EAAAA,IAAI,EAAE,uBAFP;AAEgC;AAC/BC,EAAAA,MAAM,EAAE;AACPC,IAAAA,IAAI,EAAEL,eAAe,CAACM,IADf;AACqB;AAC5BC,IAAAA,IAAI,EAAER,MAAM,GAAGS,WAAT,EAFC,CAEsB;;AAFtB,GAHT;AAOCC,EAAAA,MAAM,EAAE,wBAPT;AAQCC,EAAAA,WAAW,EAAE,6BARd;AASCC,EAAAA,iBAAiB,EAAE,KATpB;AAUCC,EAAAA,QAAQ,EAAE,CACT;AACCV,IAAAA,EAAE,EAAE,WADL;AAECC,IAAAA,IAAI,EAAE,YAFP;AAGCU,IAAAA,QAAQ,EAAE,KAHX;AAICC,IAAAA,IAAI,EAAE;AAJP,GADS,EAOT;AACCZ,IAAAA,EAAE,EAAE,WADL;AAECC,IAAAA,IAAI,EAAE,YAFP;AAGCU,IAAAA,QAAQ,EAAE,KAHX;AAICC,IAAAA,IAAI,EAAE;AAJP,GAPS,CAVX;AAwBCC,EAAAA,YAAY,EAAE,CACb;AACCb,IAAAA,EAAE,EAAE,WADL;AAECC,IAAAA,IAAI,EAAE;AAFP,GADa,EAKb;AACCD,IAAAA,EAAE,EAAE,WADL;AAECC,IAAAA,IAAI,EAAE;AAFP,GALa,CAxBf;AAkCCa,EAAAA,WAAW,EAAE,aAlCd,CAkC4B;;AAlC5B,CAD2B,EAqC3B;AACCd,EAAAA,EAAE,EAAE,kBADL;AACyB;AACxBC,EAAAA,IAAI,EAAE,wBAFP;AAEiC;AAChCC,EAAAA,MAAM,EAAE;AACPC,IAAAA,IAAI,EAAEL,eAAe,CAACM,IADf;AACqB;AAC5BC,IAAAA,IAAI,EAAER,MAAM,GAAGS,WAAT,EAFC,CAEsB;;AAFtB,GAHT;AAOCC,EAAAA,MAAM,EAAE,wBAPT;AAQCC,EAAAA,WAAW,EAAE,6BARd;AASCC,EAAAA,iBAAiB,EAAE,KATpB;AAUCC,EAAAA,QAAQ,EAAE,CACT;AACCV,IAAAA,EAAE,EAAE,WADL;AAECC,IAAAA,IAAI,EAAE,YAFP;AAGCU,IAAAA,QAAQ,EAAE,KAHX;AAICC,IAAAA,IAAI,EAAE;AAJP,GADS,EAOT;AACCZ,IAAAA,EAAE,EAAE,WADL;AAECC,IAAAA,IAAI,EAAE,YAFP;AAGCU,IAAAA,QAAQ,EAAE,MAHX;AAICC,IAAAA,IAAI,EAAE;AAJP,GAPS,CAVX;AAwBCC,EAAAA,YAAY,EAAE,CACb;AACCb,IAAAA,EAAE,EAAE,WADL;AAECC,IAAAA,IAAI,EAAE;AAFP,GADa,EAKb;AACCD,IAAAA,EAAE,EAAE,WADL;AAECC,IAAAA,IAAI,EAAE;AAFP,GALa,CAxBf;AAkCCa,EAAAA,WAAW,EAAE,aAlCd,CAkC4B;;AAlC5B,CArC2B,CAArB;AA2EP,OAAO,IAAMC,UAAU,GAAG;AACzBf,EAAAA,EAAE,EAAEgB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CADqB;AAEzBjB,EAAAA,IAAI,QAFqB;AAGzBU,EAAAA,QAAQ,EAAE,KAHe;AAIzBC,EAAAA,IAAI,EAAEI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B;AAJmB,CAAnB","sourcesContent":["import moment from 'moment'\nimport { EXPIRATION_TYPE } from '../../enums'\n\nexport const policiesList = [\n\t{\n\t\tid: '2ewsvw234ewrdsf', // UUID\n\t\tname: 'voCore-g2-42434234234', // String\n\t\texpiry: {\n\t\t\ttype: EXPIRATION_TYPE.SOFT, // String or enum ID (need to define) [HARD, SOFT]\n\t\t\tdate: moment().toISOString() // Date time ISO-8601 or another one\n\t\t},\n\t\tsource: 'pg-survivalience-21023',\n\t\tdestination: 'jarvix-121323-protocololasd',\n\t\tthreat_management: false,\n\t\tservices: [\n\t\t\t{\n\t\t\t\tid: '123131231',\n\t\t\t\tname: 'Service #1',\n\t\t\t\tprotocol: 'TCP',\n\t\t\t\tport: 8080\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: '123131231',\n\t\t\t\tname: 'Service #2',\n\t\t\t\tprotocol: 'TCP',\n\t\t\t\tport: 389\n\t\t\t}\n\t\t],\n\t\tapplications: [\n\t\t\t{\n\t\t\t\tid: '123123131',\n\t\t\t\tname: 'Application #1'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: '123123132',\n\t\t\t\tname: 'Application #2'\n\t\t\t}\n\t\t],\n\t\tdescription: 'Lorem ipsum' // Long string\n\t},\n\t{\n\t\tid: '2ewsvw234ewrdsdd', // UUID\n\t\tname: 'voCore-g2-4243423423rr', // String\n\t\texpiry: {\n\t\t\ttype: EXPIRATION_TYPE.SOFT, // String or enum ID (need to define) [HARD, SOFT]\n\t\t\tdate: moment().toISOString() // Date time ISO-8601 or another one\n\t\t},\n\t\tsource: 'pg-survivalience-21023',\n\t\tdestination: 'jarvix-121323-protocololasd',\n\t\tthreat_management: false,\n\t\tservices: [\n\t\t\t{\n\t\t\t\tid: '123131231',\n\t\t\t\tname: 'Service #1',\n\t\t\t\tprotocol: 'TCP',\n\t\t\t\tport: 8080\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: '123131231',\n\t\t\t\tname: 'Service #1',\n\t\t\t\tprotocol: 'HTTP',\n\t\t\t\tport: 389\n\t\t\t}\n\t\t],\n\t\tapplications: [\n\t\t\t{\n\t\t\t\tid: '123123131',\n\t\t\t\tname: 'Application #1'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: '123123132',\n\t\t\t\tname: 'Application #2'\n\t\t\t}\n\t\t],\n\t\tdescription: 'Lorem ipsum' // Long string\n\t}\n]\n\nexport const newService = {\n\tid: Math.floor(Math.random() * 1000),\n\tname: `TEST`,\n\tprotocol: 'FTP',\n\tport: Math.floor(Math.random() * 65000)\n}\n"]},"metadata":{},"sourceType":"module"}