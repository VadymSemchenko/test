{"ast":null,"code":"import _classCallCheck from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vadym/Documents/work/job/wedge/src/views/SignUpForm/EmailSubForm/EmailSubForm.jsx\";\nimport Spinner from 'react-spinner-material';\nimport React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withFormik } from 'formik';\nimport { func, string, shape, bool, object } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport ErrorPanel from '../../../components/ErrorPanel/ErrorPanel';\nimport { emailValidationSchema } from '../../../validationSchemas';\nimport { LOGIN_EMAIL } from '../../../assets/Icons';\nimport { checkIfTheTokenIsValid } from '../scenario-actions';\nimport { registerEmail } from '../scenario-actions';\nimport { clearError } from '../../../store/user/actions';\nimport { errorSelector, isLoadingSelector, emailSelector } from '../../../store/user/selectors';\nimport '../sign-up-form.scss';\n\nvar EmailSubForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EmailSubForm, _Component);\n\n  function EmailSubForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EmailSubForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EmailSubForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showError: false\n    };\n\n    _this.resetError = function () {\n      var _this$props = _this.props,\n          serverError = _this$props.serverError,\n          clearError = _this$props.clearError;\n      serverError && clearError();\n    };\n\n    _this.disableError = function () {\n      _this.setState({\n        showError: false\n      });\n\n      var clearError = _this.props.clearError;\n      clearError();\n    };\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n      var _this$props2 = _this.props,\n          isValid = _this$props2.isValid,\n          registerEmail = _this$props2.registerEmail,\n          values = _this$props2.values,\n          serverError = _this$props2.serverError;\n\n      if (isValid !== true || serverError) {\n        _this.setState({\n          showError: true\n        });\n      } else {\n        registerEmail(values.email);\n      }\n    };\n\n    _this.handleInputChange = function (event) {\n      var handleChange = _this.props.handleChange;\n\n      _this.setState({\n        showError: false\n      });\n\n      handleChange(event);\n    };\n\n    return _this;\n  }\n\n  _createClass(EmailSubForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          values = _this$props3.values,\n          setFieldTouched = _this$props3.setFieldTouched,\n          isLoading = _this$props3.isLoading,\n          errors = _this$props3.errors,\n          serverError = _this$props3.serverError;\n      var showError = this.state.showError;\n      var error = errors.email || serverError;\n      var shouldErrorBeDisplayed = showError && !!error;\n      return React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        className: 'form-container',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, shouldErrorBeDisplayed && React.createElement(ErrorPanel, {\n        message: error,\n        buttonClickHandler: this.disableError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: 'input-container',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'icon-container',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: LOGIN_EMAIL,\n        className: 'input-icon',\n        alt: 'input-icon',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        value: values.email,\n        name: 'email',\n        placeholder: 'Email',\n        required: true,\n        onFocus: this.resetError,\n        onChange: this.handleInputChange,\n        onBlur: function onBlur() {\n          return setFieldTouched('email');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), isLoading ? React.createElement(Spinner, {\n        spinnerColor: \"#4986c5\",\n        className: \"spinner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        className: \"submit-button-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"signup-button\",\n        value: \"Sign Up\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_ref) {\n      var serverError = _ref.serverError;\n      if (serverError) return {\n        showError: true\n      };\n      return null;\n    }\n  }]);\n\n  return EmailSubForm;\n}(Component);\n\nEmailSubForm.propTypes = {\n  handleSubmit: func.isRequired,\n  values: shape({\n    email: string\n  }).isRequired,\n  errors: shape({\n    email: string\n  }),\n  isValid: bool.isRequired,\n  setFieldTouched: func.isRequired,\n  handleChange: func.isRequired,\n  registerEmail: func.isRequired,\n  serverError: string.isRequired,\n  clearError: func.isRequired,\n  isLoading: bool.isRequired,\n  location: object.isRequired,\n  email: string.isRequired,\n  checkIfTheTokenIsValid: func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    serverError: errorSelector(state),\n    isLoading: isLoadingSelector(state),\n    error: errorSelector(state),\n    email: emailSelector(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    registerEmail: registerEmail,\n    clearError: clearError,\n    checkIfTheTokenIsValid: checkIfTheTokenIsValid\n  }, dispatch);\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withFormik({\n  mapPropsToValues: function mapPropsToValues() {\n    return {\n      email: ''\n    };\n  },\n  validationSchema: emailValidationSchema\n}))(EmailSubForm);","map":{"version":3,"sources":["/Users/vadym/Documents/work/job/wedge/src/views/SignUpForm/EmailSubForm/EmailSubForm.jsx"],"names":["Spinner","React","Component","compose","withFormik","func","string","shape","bool","object","connect","bindActionCreators","ErrorPanel","emailValidationSchema","LOGIN_EMAIL","checkIfTheTokenIsValid","registerEmail","clearError","errorSelector","isLoadingSelector","emailSelector","EmailSubForm","state","showError","resetError","props","serverError","disableError","setState","onSubmit","event","preventDefault","isValid","values","email","handleInputChange","handleChange","setFieldTouched","isLoading","errors","error","shouldErrorBeDisplayed","propTypes","handleSubmit","isRequired","location","mapStateToProps","mapDispatchToProps","dispatch","mapPropsToValues","validationSchema"],"mappings":"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","sourcesContent":["import Spinner from 'react-spinner-material'\nimport React, { Component } from 'react'\nimport { compose } from 'recompose'\nimport { withFormik } from 'formik'\nimport { func, string, shape, bool, object } from 'prop-types'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport ErrorPanel from '../../../components/ErrorPanel/ErrorPanel'\nimport { emailValidationSchema } from '../../../validationSchemas'\nimport { LOGIN_EMAIL } from '../../../assets/Icons'\nimport { checkIfTheTokenIsValid } from '../scenario-actions'\nimport { registerEmail } from '../scenario-actions'\nimport { clearError } from '../../../store/user/actions'\nimport {\n\terrorSelector,\n\tisLoadingSelector,\n\temailSelector\n} from '../../../store/user/selectors'\nimport '../sign-up-form.scss'\n\nclass EmailSubForm extends Component {\n\tstate = {\n\t\tshowError: false\n\t}\n\n\tstatic getDerivedStateFromProps({ serverError }) {\n\t\tif (serverError) return { showError: true }\n\t\treturn null\n\t}\n\n\tresetError = () => {\n\t\tconst { serverError, clearError } = this.props\n\t\tserverError && clearError()\n\t}\n\n\tdisableError = () => {\n\t\tthis.setState({\n\t\t\tshowError: false\n\t\t})\n\t\tconst { clearError } = this.props\n\t\tclearError()\n\t}\n\n\tonSubmit = event => {\n\t\tevent.preventDefault()\n\t\tconst { isValid, registerEmail, values, serverError } = this.props\n\t\tif (isValid !== true || serverError) {\n\t\t\tthis.setState({\n\t\t\t\tshowError: true\n\t\t\t})\n\t\t} else {\n\t\t\tregisterEmail(values.email)\n\t\t}\n\t}\n\n\thandleInputChange = event => {\n\t\tconst { handleChange } = this.props\n\t\tthis.setState({\n\t\t\tshowError: false\n\t\t})\n\t\thandleChange(event)\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tvalues,\n\t\t\tsetFieldTouched,\n\t\t\tisLoading,\n\t\t\terrors,\n\t\t\tserverError\n\t\t} = this.props\n\t\tconst { showError } = this.state\n\t\tconst error = errors.email || serverError\n\t\tconst shouldErrorBeDisplayed = showError && !!error\n\t\treturn (\n\t\t\t<form onSubmit={this.onSubmit} className={'form-container'}>\n\t\t\t\t{shouldErrorBeDisplayed && (\n\t\t\t\t\t<ErrorPanel message={error} buttonClickHandler={this.disableError} />\n\t\t\t\t)}\n\t\t\t\t<div className={'input-container'}>\n\t\t\t\t\t<div className={'icon-container'}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={LOGIN_EMAIL}\n\t\t\t\t\t\t\tclassName={'input-icon'}\n\t\t\t\t\t\t\talt={'input-icon'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\tname={'email'}\n\t\t\t\t\t\tplaceholder={'Email'}\n\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\tonFocus={this.resetError}\n\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\tonBlur={() => setFieldTouched('email')}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{isLoading ? (\n\t\t\t\t\t<Spinner spinnerColor=\"#4986c5\" className=\"spinner\" />\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"submit-button-container\">\n\t\t\t\t\t\t<input type=\"submit\" className=\"signup-button\" value=\"Sign Up\" />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<div>\n\t\t\t\t\t<span />\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t)\n\t}\n}\n\nEmailSubForm.propTypes = {\n\thandleSubmit: func.isRequired,\n\tvalues: shape({\n\t\temail: string\n\t}).isRequired,\n\terrors: shape({\n\t\temail: string\n\t}),\n\tisValid: bool.isRequired,\n\tsetFieldTouched: func.isRequired,\n\thandleChange: func.isRequired,\n\tregisterEmail: func.isRequired,\n\tserverError: string.isRequired,\n\tclearError: func.isRequired,\n\tisLoading: bool.isRequired,\n\tlocation: object.isRequired,\n\temail: string.isRequired,\n\tcheckIfTheTokenIsValid: func.isRequired\n}\n\nconst mapStateToProps = state => ({\n\tserverError: errorSelector(state),\n\tisLoading: isLoadingSelector(state),\n\terror: errorSelector(state),\n\temail: emailSelector(state)\n})\n\nconst mapDispatchToProps = dispatch =>\n\tbindActionCreators(\n\t\t{\n\t\t\tregisterEmail,\n\t\t\tclearError,\n\t\t\tcheckIfTheTokenIsValid\n\t\t},\n\t\tdispatch\n\t)\n\nexport default compose(\n\tconnect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps\n\t),\n\twithFormik({\n\t\tmapPropsToValues: () => ({\n\t\t\temail: ''\n\t\t}),\n\t\tvalidationSchema: emailValidationSchema\n\t})\n)(EmailSubForm)\n"]},"metadata":{},"sourceType":"module"}