{"ast":null,"code":"import _classCallCheck from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vadym/Documents/work/job/wedge/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vadym/Documents/work/job/wedge/src/views/CustomersForm/CustomersForm.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { BLUE_FORWARD_ARROW } from '../../assets/Icons';\nimport './customers-form.scss';\nimport { useCustomer as _useCustomer } from './scenario-actions';\n\nvar CustomersForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomersForm, _Component);\n\n  function CustomersForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustomersForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomersForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSelectCustomer = function (customer) {\n      var _ref = _this.props.location.state || {\n        from: {\n          pathname: '/'\n        }\n      },\n          from = _ref.from;\n\n      _this.props.useCustomer(customer, from);\n    };\n\n    _this.renderCustomers = function () {\n      var length = _this.props.customers ? _this.props.customers.length : 0;\n\n      if (length) {\n        return React.createElement(\"div\", {\n          className: 'customers-container',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, _this.props.customers.map(function (customer, index) {\n          var last = index + 1 === length;\n          return React.createElement(React.Fragment, {\n            key: \"customer-index-\".concat(index, \"-\").concat(customer.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"single-customer\",\n            onClick: function onClick() {\n              return _this.handleSelectCustomer(customer);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"single-customer--name\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, customer.id), React.createElement(\"img\", {\n            src: BLUE_FORWARD_ARROW,\n            alt: 'blue-forward',\n            className: 'forward-icon',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          })), !last && React.createElement(\"div\", {\n            className: 'divider',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }));\n        }));\n      } else {\n        return React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"You have no customers!\");\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CustomersForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.location.state) {\n        var _this$props$location$ = this.props.location.state,\n            afterLogin = _this$props$location$.afterLogin,\n            from = _this$props$location$.from;\n\n        if (afterLogin && this.props.customers && this.props.customers.length === 1) {\n          this.props.useCustomer(this.props.customers[0], from);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: 'customers-form-page--content',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'customers-form',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: 'title',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"All customers\"), this.renderCustomers()));\n    }\n  }]);\n\n  return CustomersForm;\n}(Component);\n\nCustomersForm.propTypes = {\n  useCustomer: PropTypes.func.isRequired,\n  customers: PropTypes.array.isRequired,\n  location: PropTypes.object.isRequired\n};\nCustomersForm.defaultProps = {\n  error: '',\n  isLoading: false,\n  customers: []\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    customers: state.auth.customers\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    useCustomer: function useCustomer(customer, redirect) {\n      return dispatch(_useCustomer(customer, redirect));\n    }\n  };\n};\n\nvar ConnectedCustomersForm = connect(mapStateToProps, mapDispatchToProps)(CustomersForm);\nexport default withRouter(ConnectedCustomersForm);","map":{"version":3,"sources":["/Users/vadym/Documents/work/job/wedge/src/views/CustomersForm/CustomersForm.jsx"],"names":["PropTypes","React","Component","connect","withRouter","BLUE_FORWARD_ARROW","useCustomer","CustomersForm","handleSelectCustomer","customer","props","location","state","from","pathname","renderCustomers","length","customers","map","index","last","id","afterLogin","propTypes","func","isRequired","array","object","defaultProps","error","isLoading","mapStateToProps","auth","mapDispatchToProps","dispatch","redirect","ConnectedCustomersForm"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { BLUE_FORWARD_ARROW } from '../../assets/Icons'\nimport './customers-form.scss'\nimport { useCustomer } from './scenario-actions'\n\nclass CustomersForm extends Component {\n\tcomponentDidMount() {\n\t\tif (this.props.location.state) {\n\t\t\tconst { afterLogin, from } = this.props.location.state\n\t\t\tif (\n\t\t\t\tafterLogin &&\n\t\t\t\tthis.props.customers &&\n\t\t\t\tthis.props.customers.length === 1\n\t\t\t) {\n\t\t\t\tthis.props.useCustomer(this.props.customers[0], from)\n\t\t\t}\n\t\t}\n\t}\n\n\thandleSelectCustomer = customer => {\n\t\tconst { from } = this.props.location.state || { from: { pathname: '/' } }\n\t\tthis.props.useCustomer(customer, from)\n\t}\n\n\trenderCustomers = () => {\n\t\tconst length = this.props.customers ? this.props.customers.length : 0\n\t\tif (length) {\n\t\t\treturn (\n\t\t\t\t<div className={'customers-container'}>\n\t\t\t\t\t{this.props.customers.map((customer, index) => {\n\t\t\t\t\t\tconst last = index + 1 === length\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<React.Fragment key={`customer-index-${index}-${customer.id}`}>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={`single-customer`}\n\t\t\t\t\t\t\t\t\tonClick={() => this.handleSelectCustomer(customer)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<p className={`single-customer--name`}>{customer.id}</p>\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tsrc={BLUE_FORWARD_ARROW}\n\t\t\t\t\t\t\t\t\t\talt={'blue-forward'}\n\t\t\t\t\t\t\t\t\t\tclassName={'forward-icon'}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{!last && <div className={'divider'} />}\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else {\n\t\t\treturn <h4>You have no customers!</h4>\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={'customers-form-page--content'}>\n\t\t\t\t<div className={'customers-form'}>\n\t\t\t\t\t<h2 className={'title'}>All customers</h2>\n\t\t\t\t\t{this.renderCustomers()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nCustomersForm.propTypes = {\n\tuseCustomer: PropTypes.func.isRequired,\n\tcustomers: PropTypes.array.isRequired,\n\tlocation: PropTypes.object.isRequired\n}\n\nCustomersForm.defaultProps = {\n\terror: '',\n\tisLoading: false,\n\tcustomers: []\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tcustomers: state.auth.customers\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tuseCustomer: (customer, redirect) =>\n\t\t\tdispatch(useCustomer(customer, redirect))\n\t}\n}\n\nconst ConnectedCustomersForm = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(CustomersForm)\nexport default withRouter(ConnectedCustomersForm)\n"]},"metadata":{},"sourceType":"module"}